webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/post.js":
/*!*******************************************************!*\
  !*** ./packages/techno-chakra/src/components/post.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _commentsform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commentsform */ \"./packages/techno-chakra/src/components/commentsform.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const Post=({actions,state,libraries})=>{const data=state.source.get(state.router.link);const post=state.source[data.type][data.id];const author=state.source.author[post.author];const comments=state.source.comment;const commentsKeys=Object.keys(comments);console.log('comments',comments);const Html2React=libraries.html2react.Component;const[showCommentForm,setShowCommentForm]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false);const[showComments,setShowComments]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false);const formattedDate=dayjs__WEBPACK_IMPORTED_MODULE_6___default()(post.date).format(\"DD MMMM YYYY\");if(data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Loading,{});}if(!data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",align:\"center\",mb:10,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_4__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"title\",{children:post.title.rendered}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"meta\",{name:\"description\",content:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(PostContainer,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Html2React,{html:post.title.rendered})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"br\",{})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(PostContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Stat\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"StatLabel\"],{children:[\"Author: \",author.name]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"StatHelpText\"],{children:[\"Posted: \",formattedDate]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Html2React,{html:post.content.rendered})]})]}),!showComments&&// <CommentToggle>\nObject(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Button\"],{bg:\"#FD05E9\",color:\"#FFFFFF\",onClick:()=>setShowComments(true),mb:5,children:\"View Comments\"})// </CommentToggle>\n,!showCommentForm&&// <CommentToggle>\nObject(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Button\"],{bg:\"#EE0300\",color:\"#FFFFFF\",onClick:()=>setShowCommentForm(true),mb:5,children:\"Leave a Comment\"})// </CommentToggle>\n,!!showComments&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Comments,{children:commentsKeys.map(commentKey=>Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(Comment,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"img\",{src:comments[commentKey].author_avatar_urls[96]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(CommentInfo,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(CommentMeta,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"p\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"strong\",{children:\"Posted:          \"}),dayjs__WEBPACK_IMPORTED_MODULE_6___default()(comments[commentKey].date).format(\"DD MMMM YYYY\")]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(\"p\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"strong\",{children:\"Author:          \"}),comments[commentKey].author_name]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"p\",{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Html2React,{html:comments[commentKey].content.rendered})})]})]}))}),!!showCommentForm&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_commentsform__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{actions:actions,state:state,postId:data.id})]});}};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(Post));const PostContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf6\",label:\"PostContainer\"})( false?undefined:{name:\"1f3xme3\",styles:\"background-color:#FFFFFF;color:#000000;border-radius:100px 100px 50px 50px;margin-top:40px;margin-bottom:40px;border-radius:100px 100px 50px 50px;h2{font-size:36px;margin:0px;}@media (max-width: 800px){width:780px;}@media (max-width: 600px){width:350px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostContent=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf5\",label:\"PostContent\"})( false?undefined:{name:\"1czmlax\",styles:\"display:flex;flex-direction:column;max-width:800px;background-color:#FFFFFF;color:#000000;border-radius:100px 100px 50px 50px;padding-left:20px;padding-right:20px;padding-bottom:20px;h2{font-size:36px;margin:0.5em 0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9wb3N0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdIOEIiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL3Bvc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBIZWFkaW5nLFxuICBGbGV4LFxuICBTdGF0LFxuICBTdGF0TGFiZWwsXG4gIFN0YXROdW1iZXIsXG4gIFN0YXRIZWxwVGV4dCxcbiAgU3RhdEFycm93LFxuICBTdGF0R3JvdXAsXG4gIEJ1dHRvblxufSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXG5pbXBvcnQgZGF5anMgZnJvbSBcImRheWpzXCJcbmltcG9ydCBDb21tZW50c0Zvcm0gZnJvbSBcIi4vY29tbWVudHNmb3JtXCJcblxuY29uc3QgUG9zdCA9ICh7IGFjdGlvbnMsIHN0YXRlLCBsaWJyYXJpZXMgfSkgPT4ge1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluaylcbiAgY29uc3QgcG9zdCA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdXG4gIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdXG4gIGNvbnN0IGNvbW1lbnRzID0gc3RhdGUuc291cmNlLmNvbW1lbnQ7XG4gIGNvbnN0IGNvbW1lbnRzS2V5cyA9IE9iamVjdC5rZXlzKGNvbW1lbnRzKTtcbiAgY29uc29sZS5sb2coJ2NvbW1lbnRzJywgY29tbWVudHMpO1xuICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50XG4gIGNvbnN0IFtzaG93Q29tbWVudEZvcm0sIHNldFNob3dDb21tZW50Rm9ybV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93Q29tbWVudHMsIHNldFNob3dDb21tZW50c10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBkYXlqcyhwb3N0LmRhdGUpLmZvcm1hdChcIkREIE1NTU0gWVlZWVwiKVxuXG4gIGlmIChkYXRhLmlzRmV0Y2hpbmcpIHtcbiAgICByZXR1cm4gPExvYWRpbmcgLz5cbiAgfVxuXG4gIGlmICghZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiBhbGlnbj1cImNlbnRlclwiIG1iPXsxMH0+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlLnJlbmRlcmVkfTwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgICAgPFBvc3RDb250YWluZXI+XG4gICAgICAgICAgPExpbmsgbGluaz17cG9zdC5saW5rfSBzdHlsZT17e3RleHREZWNvcmF0aW9uOiBcIm5vbmVcIn19PlxuICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT5cbiAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LnRpdGxlLnJlbmRlcmVkfSAvPlxuICAgICAgICAgICAgICA8L0hlYWRpbmc+XG4gICAgICAgICAgICA8L1Bvc3RUaXRsZT5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8UG9zdENvbnRlbnQ+XG4gICAgICAgICAgICAgIDxTdGF0PlxuICAgICAgICAgICAgICAgIDxTdGF0TGFiZWw+QXV0aG9yOiB7YXV0aG9yLm5hbWV9PC9TdGF0TGFiZWw+XG4gICAgICAgICAgICAgICAgPFN0YXRIZWxwVGV4dD5Qb3N0ZWQ6IHtmb3JtYXR0ZWREYXRlfTwvU3RhdEhlbHBUZXh0PlxuICAgICAgICAgICAgICA8L1N0YXQ+XG4gICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuY29udGVudC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICA8L1Bvc3RDb250ZW50PlxuICAgICAgICA8L1Bvc3RDb250YWluZXI+XG4gICAgICAgICAgXG4gICAgICAgICAgeyFzaG93Q29tbWVudHMgJiYgXG4gICAgICAgICAgLy8gPENvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgICA8QnV0dG9uIGJnPVwiI0ZEMDVFOVwiIGNvbG9yPVwiI0ZGRkZGRlwiIG9uQ2xpY2s9eygpID0+IHNldFNob3dDb21tZW50cyh0cnVlKX0gbWI9ezV9PlZpZXcgQ29tbWVudHM8L0J1dHRvbj5cbiAgICAgICAgICAvLyA8L0NvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgfVxuICAgICAgICAgIHshc2hvd0NvbW1lbnRGb3JtICYmIFxuICAgICAgICAgIC8vIDxDb21tZW50VG9nZ2xlPlxuICAgICAgICAgICAgPEJ1dHRvbiBiZz1cIiNFRTAzMDBcIiBjb2xvcj1cIiNGRkZGRkZcIiBvbkNsaWNrPXsoKSA9PiBzZXRTaG93Q29tbWVudEZvcm0odHJ1ZSl9IG1iPXs1fT5MZWF2ZSBhIENvbW1lbnQ8L0J1dHRvbj5cbiAgICAgICAgICAvLyA8L0NvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgeyEhc2hvd0NvbW1lbnRzICYmIFxuICAgICAgICAgICAgPENvbW1lbnRzPlxuICAgICAgICAgICAgICB7Y29tbWVudHNLZXlzLm1hcCgoY29tbWVudEtleSkgID0+IFxuICAgICAgICAgICAgICA8Q29tbWVudD5cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz17Y29tbWVudHNbY29tbWVudEtleV0uYXV0aG9yX2F2YXRhcl91cmxzWzk2XX0gLz5cbiAgICAgICAgICAgICAgICA8Q29tbWVudEluZm8+XG4gICAgICAgICAgICAgICAgICA8Q29tbWVudE1ldGE+XG4gICAgICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+UG9zdGVkOiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICB7ZGF5anMoY29tbWVudHNbY29tbWVudEtleV0uZGF0ZSkuZm9ybWF0KFwiREQgTU1NTSBZWVlZXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+QXV0aG9yOiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICB7Y29tbWVudHNbY29tbWVudEtleV0uYXV0aG9yX25hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgIDwvQ29tbWVudE1ldGE+XG4gICAgICAgICAgICAgICAgICA8cD48SHRtbDJSZWFjdCBodG1sPXtjb21tZW50c1tjb21tZW50S2V5XS5jb250ZW50LnJlbmRlcmVkfSAvPjwvcD5cbiAgICAgICAgICAgICAgICA8L0NvbW1lbnRJbmZvPlxuICAgICAgICAgICAgICA8L0NvbW1lbnQ+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0NvbW1lbnRzPlxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICB7ISFzaG93Q29tbWVudEZvcm0gJiYgXG4gICAgICAgICAgPENvbW1lbnRzRm9ybSBhY3Rpb25zPXthY3Rpb25zfSBzdGF0ZT17c3RhdGV9IHBvc3RJZD17ZGF0YS5pZH0gLz5cbiAgICAgICAgICB9XG4gICAgPC9GbGV4PlxuICApXG59XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9zdCk7XG5cbmNvbnN0IFBvc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHggMTAwcHggNTBweCA1MHB4O1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgd2lkdGg6IDc4MHB4O1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgfVxuYFxuXG5jb25zdCBQb3N0Q29udGVudCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1heC13aWR0aDogODAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICB9XG5gXG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5kaXZgXG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgLW1vei1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDBweCAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcblxuICAgIEBrZXlmcmFtZXMgY29sb3JjaGFuZ2Uge1xuICAgIDAlIHtcbiAgICAgIGNvbG9yOiAjM0FBRUMyO1xuICAgIH1cbiAgICBcbiAgICAxMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxuICAgIFxuICAgIDI1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cbiAgICBcbiAgICA1MCUge1xuICAgICAgY29sb3I6ICNFRTAzMDA7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIDc1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxufVxuYFxuXG5jb25zdCBDb21tZW50SW5mbyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgcGFkZGluZzogMC41ZW07XG4gIC8qIGJvcmRlci1sZWZ0OiA0cHggc29saWQgI0FEOTA0NDsgKi9cbiAgZm9udC1zaXplOiAxZW07XG5cbiAgJiA+IHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gICYgPiBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gIH1cbmBcblxuY29uc3QgQ29tbWVudE1ldGEgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIG1hcmdpbi1sZWZ0OiAxZW07XG4gIHBhZGRpbmc6IDAuNWVtO1xuICAvKiBib3JkZXItbGVmdDogNHB4IHNvbGlkICNBRDkwNDQ7ICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuXG4gICYgPiBwIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbmBcblxuY29uc3QgQ29tbWVudCA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICYgPiBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgaGVpZ2h0OiA5NnB4O1xuICAgIHdpZHRoOiA5NnB4O1xuICB9XG5gXG5cbmNvbnN0IENvbW1lbnRzID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLXRvcDogMjBweDtcbmBcblxuLy8gY29uc3QgQ29tbWVudFRvZ2dsZSA9IHN0eWxlZC5kaXZgXG4vLyAgIG1hcmdpbi10b3A6IDIwcHg7XG4vLyAgICYgPiBidXR0b24ge1xuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICNBRDkwNDQ7XG4vLyAgICAgY29sb3I6ICNGRkZGRkY7XG4vLyAgICAgZm9udC1zaXplOiAyMHB4O1xuLy8gICAgIHBhZGRpbmc6IDEwcHg7XG4vLyAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbi8vICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuLy8gICB9XG4vLyBgIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf4\",label:\"PostTitle\"})( false?undefined:{name:\"1jkq6mp\",styles:\"-webkit-animation:colorchange 20s infinite alternate;-moz-animation:colorchange 20s infinite alternate;animation:colorchange 20s infinite alternate;text-align:center;border-radius:100px 100px 0px 0px;background-color:#000000;@keyframes colorchange{0%{color:#3AAEC2;}10%{color:#FD05E9;}25%{color:yellow;}50%{color:#EE0300;}75%{color:yellow;}100%{color:#FD05E9;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const CommentInfo=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf3\",label:\"CommentInfo\"})( false?undefined:{name:\"1bzd540\",styles:\"display:flex;flex-direction:column;align-items:center;margin-bottom:1em;padding:0.5em;font-size:1em;&>p{margin:0;}&>img{border-radius:50px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const CommentMeta=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf2\",label:\"CommentMeta\"})( false?undefined:{name:\"1mgi2yj\",styles:\"display:flex;flex-direction:column;margin-bottom:1em;margin-left:1em;padding:0.5em;font-size:1em;&>p{margin:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Comment=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf1\",label:\"Comment\"})( false?undefined:{name:\"xbfpt1\",styles:\"margin-top:20px;display:flex;flex-direction:row;&>img{border-radius:50px;height:96px;width:96px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Comments=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"ebqmpyf0\",label:\"Comments\"})( false?undefined:{name:\"iqoq9n\",styles:\"margin-top:20px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9wb3N0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdOMkIiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL3Bvc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBIZWFkaW5nLFxuICBGbGV4LFxuICBTdGF0LFxuICBTdGF0TGFiZWwsXG4gIFN0YXROdW1iZXIsXG4gIFN0YXRIZWxwVGV4dCxcbiAgU3RhdEFycm93LFxuICBTdGF0R3JvdXAsXG4gIEJ1dHRvblxufSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXG5pbXBvcnQgZGF5anMgZnJvbSBcImRheWpzXCJcbmltcG9ydCBDb21tZW50c0Zvcm0gZnJvbSBcIi4vY29tbWVudHNmb3JtXCJcblxuY29uc3QgUG9zdCA9ICh7IGFjdGlvbnMsIHN0YXRlLCBsaWJyYXJpZXMgfSkgPT4ge1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluaylcbiAgY29uc3QgcG9zdCA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdXG4gIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdXG4gIGNvbnN0IGNvbW1lbnRzID0gc3RhdGUuc291cmNlLmNvbW1lbnQ7XG4gIGNvbnN0IGNvbW1lbnRzS2V5cyA9IE9iamVjdC5rZXlzKGNvbW1lbnRzKTtcbiAgY29uc29sZS5sb2coJ2NvbW1lbnRzJywgY29tbWVudHMpO1xuICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50XG4gIGNvbnN0IFtzaG93Q29tbWVudEZvcm0sIHNldFNob3dDb21tZW50Rm9ybV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93Q29tbWVudHMsIHNldFNob3dDb21tZW50c10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBkYXlqcyhwb3N0LmRhdGUpLmZvcm1hdChcIkREIE1NTU0gWVlZWVwiKVxuXG4gIGlmIChkYXRhLmlzRmV0Y2hpbmcpIHtcbiAgICByZXR1cm4gPExvYWRpbmcgLz5cbiAgfVxuXG4gIGlmICghZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiBhbGlnbj1cImNlbnRlclwiIG1iPXsxMH0+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlLnJlbmRlcmVkfTwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgICAgPFBvc3RDb250YWluZXI+XG4gICAgICAgICAgPExpbmsgbGluaz17cG9zdC5saW5rfSBzdHlsZT17e3RleHREZWNvcmF0aW9uOiBcIm5vbmVcIn19PlxuICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT5cbiAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LnRpdGxlLnJlbmRlcmVkfSAvPlxuICAgICAgICAgICAgICA8L0hlYWRpbmc+XG4gICAgICAgICAgICA8L1Bvc3RUaXRsZT5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8UG9zdENvbnRlbnQ+XG4gICAgICAgICAgICAgIDxTdGF0PlxuICAgICAgICAgICAgICAgIDxTdGF0TGFiZWw+QXV0aG9yOiB7YXV0aG9yLm5hbWV9PC9TdGF0TGFiZWw+XG4gICAgICAgICAgICAgICAgPFN0YXRIZWxwVGV4dD5Qb3N0ZWQ6IHtmb3JtYXR0ZWREYXRlfTwvU3RhdEhlbHBUZXh0PlxuICAgICAgICAgICAgICA8L1N0YXQ+XG4gICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuY29udGVudC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICA8L1Bvc3RDb250ZW50PlxuICAgICAgICA8L1Bvc3RDb250YWluZXI+XG4gICAgICAgICAgXG4gICAgICAgICAgeyFzaG93Q29tbWVudHMgJiYgXG4gICAgICAgICAgLy8gPENvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgICA8QnV0dG9uIGJnPVwiI0ZEMDVFOVwiIGNvbG9yPVwiI0ZGRkZGRlwiIG9uQ2xpY2s9eygpID0+IHNldFNob3dDb21tZW50cyh0cnVlKX0gbWI9ezV9PlZpZXcgQ29tbWVudHM8L0J1dHRvbj5cbiAgICAgICAgICAvLyA8L0NvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgfVxuICAgICAgICAgIHshc2hvd0NvbW1lbnRGb3JtICYmIFxuICAgICAgICAgIC8vIDxDb21tZW50VG9nZ2xlPlxuICAgICAgICAgICAgPEJ1dHRvbiBiZz1cIiNFRTAzMDBcIiBjb2xvcj1cIiNGRkZGRkZcIiBvbkNsaWNrPXsoKSA9PiBzZXRTaG93Q29tbWVudEZvcm0odHJ1ZSl9IG1iPXs1fT5MZWF2ZSBhIENvbW1lbnQ8L0J1dHRvbj5cbiAgICAgICAgICAvLyA8L0NvbW1lbnRUb2dnbGU+XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgeyEhc2hvd0NvbW1lbnRzICYmIFxuICAgICAgICAgICAgPENvbW1lbnRzPlxuICAgICAgICAgICAgICB7Y29tbWVudHNLZXlzLm1hcCgoY29tbWVudEtleSkgID0+IFxuICAgICAgICAgICAgICA8Q29tbWVudD5cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz17Y29tbWVudHNbY29tbWVudEtleV0uYXV0aG9yX2F2YXRhcl91cmxzWzk2XX0gLz5cbiAgICAgICAgICAgICAgICA8Q29tbWVudEluZm8+XG4gICAgICAgICAgICAgICAgICA8Q29tbWVudE1ldGE+XG4gICAgICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+UG9zdGVkOiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICB7ZGF5anMoY29tbWVudHNbY29tbWVudEtleV0uZGF0ZSkuZm9ybWF0KFwiREQgTU1NTSBZWVlZXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+QXV0aG9yOiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICB7Y29tbWVudHNbY29tbWVudEtleV0uYXV0aG9yX25hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgIDwvQ29tbWVudE1ldGE+XG4gICAgICAgICAgICAgICAgICA8cD48SHRtbDJSZWFjdCBodG1sPXtjb21tZW50c1tjb21tZW50S2V5XS5jb250ZW50LnJlbmRlcmVkfSAvPjwvcD5cbiAgICAgICAgICAgICAgICA8L0NvbW1lbnRJbmZvPlxuICAgICAgICAgICAgICA8L0NvbW1lbnQ+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0NvbW1lbnRzPlxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICB7ISFzaG93Q29tbWVudEZvcm0gJiYgXG4gICAgICAgICAgPENvbW1lbnRzRm9ybSBhY3Rpb25zPXthY3Rpb25zfSBzdGF0ZT17c3RhdGV9IHBvc3RJZD17ZGF0YS5pZH0gLz5cbiAgICAgICAgICB9XG4gICAgPC9GbGV4PlxuICApXG59XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9zdCk7XG5cbmNvbnN0IFBvc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHggMTAwcHggNTBweCA1MHB4O1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgd2lkdGg6IDc4MHB4O1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgfVxuYFxuXG5jb25zdCBQb3N0Q29udGVudCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1heC13aWR0aDogODAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICB9XG5gXG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5kaXZgXG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgLW1vei1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDBweCAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcblxuICAgIEBrZXlmcmFtZXMgY29sb3JjaGFuZ2Uge1xuICAgIDAlIHtcbiAgICAgIGNvbG9yOiAjM0FBRUMyO1xuICAgIH1cbiAgICBcbiAgICAxMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxuICAgIFxuICAgIDI1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cbiAgICBcbiAgICA1MCUge1xuICAgICAgY29sb3I6ICNFRTAzMDA7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIDc1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxufVxuYFxuXG5jb25zdCBDb21tZW50SW5mbyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgcGFkZGluZzogMC41ZW07XG4gIC8qIGJvcmRlci1sZWZ0OiA0cHggc29saWQgI0FEOTA0NDsgKi9cbiAgZm9udC1zaXplOiAxZW07XG5cbiAgJiA+IHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gICYgPiBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gIH1cbmBcblxuY29uc3QgQ29tbWVudE1ldGEgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIG1hcmdpbi1sZWZ0OiAxZW07XG4gIHBhZGRpbmc6IDAuNWVtO1xuICAvKiBib3JkZXItbGVmdDogNHB4IHNvbGlkICNBRDkwNDQ7ICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuXG4gICYgPiBwIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbmBcblxuY29uc3QgQ29tbWVudCA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICYgPiBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgaGVpZ2h0OiA5NnB4O1xuICAgIHdpZHRoOiA5NnB4O1xuICB9XG5gXG5cbmNvbnN0IENvbW1lbnRzID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLXRvcDogMjBweDtcbmBcblxuLy8gY29uc3QgQ29tbWVudFRvZ2dsZSA9IHN0eWxlZC5kaXZgXG4vLyAgIG1hcmdpbi10b3A6IDIwcHg7XG4vLyAgICYgPiBidXR0b24ge1xuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICNBRDkwNDQ7XG4vLyAgICAgY29sb3I6ICNGRkZGRkY7XG4vLyAgICAgZm9udC1zaXplOiAyMHB4O1xuLy8gICAgIHBhZGRpbmc6IDEwcHg7XG4vLyAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbi8vICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuLy8gICB9XG4vLyBgIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// const CommentToggle = styled.div`\n//   margin-top: 20px;\n//   & > button {\n//     background-color: #AD9044;\n//     color: #FFFFFF;\n//     font-size: 20px;\n//     padding: 10px;\n//     font-weight: 500;\n//     text-transform: uppercase;\n//   }\n// `//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/post.js\n");

/***/ })

})