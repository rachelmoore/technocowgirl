webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/list.js":
/*!*******************************************************!*\
  !*** ./packages/techno-chakra/src/components/list.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loading */ \"./packages/techno-chakra/src/components/loading.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const List=({state,actions,libraries})=>{const data=state.source.get(state.router.link);const Html2React=libraries.html2react.Component;const[isLargerThan800]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 800px)\");const[isLargerThan1015]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 1015px)\");const colorDict={0:\"#3AAEC2\",1:\"#EE0300\",2:\"#6A3A80\"};console.log('data',data);if(data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{});}if(!data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"100%\",children:[data.items.map((item,idx)=>{const post=state.source[item.type][item.id];return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContainer,{children:[isLargerThan800&&idx%2!==0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row\",width:\"100%\",sx:{'--custom-bg-odd':colorDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-odd)\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),isLargerThan800&&idx%2===0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row-reverse\",width:\"100%\",sx:{'--custom-bg-even':colorDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-even)\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),!isLargerThan800&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContentContainer,{children:[state.source.attachment[post.featured_media]&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Image\"],{src:state.source.attachment[post.featured_media].source_url}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]})]})]});}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(PrevNextNav,{children:[data.previous&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.previous);},children:\"\\xAB Prev\"}),data.next&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.next);},children:\"Next \\xBB\"})]})]});}};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(List));const Items=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs4\",label:\"Items\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");const ItemContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs3\",label:\"ItemContainer\"})( false?undefined:{name:\"7oef90\",styles:\"background-color:#FFFFFF;color:#000000;width:100%;margin-bottom:60px;&>a{display:block;font-size:1.2em;color:#AD9044;text-decoration:none;}p{font-size:22px;color:#FFFFFF;}h2{margin-top:0px;font-size:36px;}@media (max-width: 800px){width:780px;border-radius:100px 100px 50px 50px;}@media (max-width: 600px){width:350px;border-radius:100px 100px 50px 50px;margin-bottom:60px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9saXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVJZ0MiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL2xpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkaW5nLCBUZXh0LCBGbGV4LCBJbWFnZSwgdXNlTWVkaWFRdWVyeSB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXG5pbXBvcnQgTG9hZGluZyBmcm9tIFwiLi9sb2FkaW5nXCI7XG5cbmNvbnN0IExpc3QgPSAoeyBzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzIH0pID0+IHtcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuICBjb25zdCBbaXNMYXJnZXJUaGFuODAwXSA9IHVzZU1lZGlhUXVlcnkoXCIobWluLXdpZHRoOiA4MDBweClcIik7XG4gIGNvbnN0IFtpc0xhcmdlclRoYW4xMDE1XSA9IHVzZU1lZGlhUXVlcnkoXCIobWluLXdpZHRoOiAxMDE1cHgpXCIpO1xuICBjb25zdCBjb2xvckRpY3QgPSB7XG4gICAgMDogXCIjM0FBRUMyXCIsXG4gICAgMTogXCIjRUUwMzAwXCIsXG4gICAgMjogXCIjNkEzQTgwXCIsXG4gIH1cbiAgY29uc29sZS5sb2coJ2RhdGEnLCBkYXRhKVxuXG4gIGlmIChkYXRhLmlzRmV0Y2hpbmcpIHtcbiAgICByZXR1cm4gPExvYWRpbmcgLz5cbiAgfVxuXG4gIGlmICghZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiMTAwJVwiPlxuICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKGl0ZW0sIGlkeCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbaXRlbS50eXBlXVtpdGVtLmlkXVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEl0ZW1Db250YWluZXI+XG4gICAgICAgICAgICB7aXNMYXJnZXJUaGFuODAwICYmIChpZHggJSAyICE9PSAwKSAmJlxuICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJyb3dcIiB3aWR0aD1cIjEwMCVcIiBzeD17eyAnLS1jdXN0b20tYmctb2RkJzogY29sb3JEaWN0W2lkeF19fT5cbiAgICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjUwJVwiIHBhZGRpbmc9ezEwfSBiZz0ndmFyKC0tY3VzdG9tLWJnLW9kZCknPlxuICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgICAgIDxQb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT57cG9zdC50aXRsZS5yZW5kZXJlZH08L0hlYWRpbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9XCI1MCVcIiBzdHlsZT17eyBiYWNrZ3JvdW5kOiBgdXJsKFwiJHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfVwiKWAsIGJhY2tncm91bmRQb3NpdGlvbjogXCJjZW50ZXJcIiwgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIiwgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIiB9fT5cbiAgICAgICAgICAgICAgICAgIHsvKiB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICAgICAgPEltYWdlIHNyYz17c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgfSAqL31cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHtpc0xhcmdlclRoYW44MDAgJiYgKGlkeCAlIDIgPT09IDApICYmXG4gICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cInJvdy1yZXZlcnNlXCIgd2lkdGg9XCIxMDAlXCIgc3g9e3sgJy0tY3VzdG9tLWJnLWV2ZW4nOiBjb2xvckRpY3RbaWR4XX19PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgcGFkZGluZz17MTB9IGJnPSd2YXIoLS1jdXN0b20tYmctZXZlbiknPlxuICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgICAgIDxQb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT57cG9zdC50aXRsZS5yZW5kZXJlZH08L0hlYWRpbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9XCI1MCVcIiBzdHlsZT17eyBiYWNrZ3JvdW5kOiBgdXJsKFwiJHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfVwiKWAsIGJhY2tncm91bmRQb3NpdGlvbjogXCJjZW50ZXJcIiwgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIiwgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIiB9fT5cbiAgICAgICAgICAgICAgICAgIHsvKiB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICAgICAgPEltYWdlIHNyYz17c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgfSAqL31cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB7IWlzTGFyZ2VyVGhhbjgwMCAmJlxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJsZ1wiIHBiPXs1fSBwdD17NX0+e3Bvc3QudGl0bGUucmVuZGVyZWR9PC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDxJdGVtQ29udGVudENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfSAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmV4Y2VycHQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgICAgIDwvSXRlbUNvbnRlbnRDb250YWluZXI+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvSXRlbUNvbnRhaW5lcj5cbiAgICAgICAgICApfVxuICAgICAgICApfVxuICAgICAgICA8UHJldk5leHROYXY+XG4gICAgICAgICAge2RhdGEucHJldmlvdXMgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEucHJldmlvdXMpXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICYjMTcxOyBQcmV2XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtkYXRhLm5leHQgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEubmV4dClcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgTmV4dCAmIzE4NztcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUHJldk5leHROYXY+XG4gICAgICA8L0ZsZXg+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdClcblxuY29uc3QgSXRlbXMgPSBzdHlsZWQuZGl2YFxuICAvKiBkaXY6IG50aC1vZi10eXBlKDEpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0FBRUMyO1xuICB9XG4gIGRpdjogbnRoLW9mLXR5cGUoMikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRDA1RTk7XG4gIH1cbiAgZGl2OiBudGgtb2YtdHlwZSgzKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzZBM0E4MDtcbiAgfVxuICBkaXY6IG50aC1vZi10eXBlKDQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUUwMzAwO1xuICB9ICovXG5cbiAgLyogJiA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogNnB4IDA7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH0gKi9cbiAgfVxuYFxuXG5jb25zdCBJdGVtQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAmID4gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgcCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICB9XG4gIGgyIHtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIHdpZHRoOiA3ODBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDUwcHggNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICB9XG5gXG5cbmNvbnN0IEl0ZW1Db250ZW50Q29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNTBweCA1MHB4O1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBtYXgtd2lkdGg6IDg1MHB4O1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAmID4gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiA2cHggMDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIGNvbG9yOiAjQUQ5MDQ0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuYFxuXG5jb25zdCBQcmV2TmV4dE5hdiA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmctdG9wOiAxLjVlbTtcblxuICAmID4gYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjMzY1NEE4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm94LXNoYWRvdzogMC41cmVtIDAuNXJlbSBibGFjaywgLTAuNXJlbSAtMC41cmVtICNBRDkwNDQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcbiAgfVxuICAmID4gYnV0dG9uOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbmBcblxuY29uc3QgUG9zdFRpdGxlID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgLW1vei1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCAwcHggMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgICB9XG5cbiAgICBAa2V5ZnJhbWVzIGNvbG9yY2hhbmdlIHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogIzNBQUVDMjtcbiAgICB9XG4gICAgXG4gICAgMTAlIHtcbiAgICAgIGNvbG9yOiAjRkQwNUU5O1xuICAgIH1cbiAgICBcbiAgICAyNSUge1xuICAgICAgY29sb3I6IHllbGxvdztcbiAgICB9XG4gICAgXG4gICAgNTAlIHtcbiAgICAgIGNvbG9yOiAjRUUwMzAwO1xuICAgIH1cbiAgICBcbiAgICBcbiAgICA3NSUge1xuICAgICAgY29sb3I6IHllbGxvdztcbiAgICB9XG5cbiAgICAxMDAlIHtcbiAgICAgIGNvbG9yOiAjRkQwNUU5O1xuICAgIH1cbn1cbmAiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const ItemContentContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs2\",label:\"ItemContentContainer\"})( false?undefined:{name:\"1lrj3fj\",styles:\"background-color:#FFFFFF;color:#000000;border-radius:0px 0px 50px 50px;padding-left:20px;padding-right:20px;padding-bottom:20px;max-width:850px;margin-bottom:60px;&>a{display:block;margin:6px 0;font-size:1.2em;color:#AD9044;text-decoration:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PrevNextNav=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs1\",label:\"PrevNextNav\"})( false?undefined:{name:\"b2xp23\",styles:\"padding-top:1.5em;&>button{background:#3654A8;border:none;color:#FFFFFF;text-decoration:none;font-size:20px;margin-right:2em;padding:10px;box-shadow:0.5rem 0.5rem black,-0.5rem -0.5rem #AD9044;transition:all 0.3s ease 0s;}&>button:hover{cursor:pointer;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9saXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVMOEIiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL2xpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkaW5nLCBUZXh0LCBGbGV4LCBJbWFnZSwgdXNlTWVkaWFRdWVyeSB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXG5pbXBvcnQgTG9hZGluZyBmcm9tIFwiLi9sb2FkaW5nXCI7XG5cbmNvbnN0IExpc3QgPSAoeyBzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzIH0pID0+IHtcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuICBjb25zdCBbaXNMYXJnZXJUaGFuODAwXSA9IHVzZU1lZGlhUXVlcnkoXCIobWluLXdpZHRoOiA4MDBweClcIik7XG4gIGNvbnN0IFtpc0xhcmdlclRoYW4xMDE1XSA9IHVzZU1lZGlhUXVlcnkoXCIobWluLXdpZHRoOiAxMDE1cHgpXCIpO1xuICBjb25zdCBjb2xvckRpY3QgPSB7XG4gICAgMDogXCIjM0FBRUMyXCIsXG4gICAgMTogXCIjRUUwMzAwXCIsXG4gICAgMjogXCIjNkEzQTgwXCIsXG4gIH1cbiAgY29uc29sZS5sb2coJ2RhdGEnLCBkYXRhKVxuXG4gIGlmIChkYXRhLmlzRmV0Y2hpbmcpIHtcbiAgICByZXR1cm4gPExvYWRpbmcgLz5cbiAgfVxuXG4gIGlmICghZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiMTAwJVwiPlxuICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKGl0ZW0sIGlkeCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbaXRlbS50eXBlXVtpdGVtLmlkXVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEl0ZW1Db250YWluZXI+XG4gICAgICAgICAgICB7aXNMYXJnZXJUaGFuODAwICYmIChpZHggJSAyICE9PSAwKSAmJlxuICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJyb3dcIiB3aWR0aD1cIjEwMCVcIiBzeD17eyAnLS1jdXN0b20tYmctb2RkJzogY29sb3JEaWN0W2lkeF19fT5cbiAgICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjUwJVwiIHBhZGRpbmc9ezEwfSBiZz0ndmFyKC0tY3VzdG9tLWJnLW9kZCknPlxuICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgICAgIDxQb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT57cG9zdC50aXRsZS5yZW5kZXJlZH08L0hlYWRpbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9XCI1MCVcIiBzdHlsZT17eyBiYWNrZ3JvdW5kOiBgdXJsKFwiJHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfVwiKWAsIGJhY2tncm91bmRQb3NpdGlvbjogXCJjZW50ZXJcIiwgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIiwgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIiB9fT5cbiAgICAgICAgICAgICAgICAgIHsvKiB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICAgICAgPEltYWdlIHNyYz17c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgfSAqL31cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHtpc0xhcmdlclRoYW44MDAgJiYgKGlkeCAlIDIgPT09IDApICYmXG4gICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cInJvdy1yZXZlcnNlXCIgd2lkdGg9XCIxMDAlXCIgc3g9e3sgJy0tY3VzdG9tLWJnLWV2ZW4nOiBjb2xvckRpY3RbaWR4XX19PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgcGFkZGluZz17MTB9IGJnPSd2YXIoLS1jdXN0b20tYmctZXZlbiknPlxuICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgICAgIDxQb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT57cG9zdC50aXRsZS5yZW5kZXJlZH08L0hlYWRpbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9XCI1MCVcIiBzdHlsZT17eyBiYWNrZ3JvdW5kOiBgdXJsKFwiJHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfVwiKWAsIGJhY2tncm91bmRQb3NpdGlvbjogXCJjZW50ZXJcIiwgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIiwgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIiB9fT5cbiAgICAgICAgICAgICAgICAgIHsvKiB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICAgICAgPEltYWdlIHNyYz17c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgfSAqL31cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB7IWlzTGFyZ2VyVGhhbjgwMCAmJlxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJsZ1wiIHBiPXs1fSBwdD17NX0+e3Bvc3QudGl0bGUucmVuZGVyZWR9PC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDxJdGVtQ29udGVudENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfSAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmV4Y2VycHQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgICAgIDwvSXRlbUNvbnRlbnRDb250YWluZXI+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvSXRlbUNvbnRhaW5lcj5cbiAgICAgICAgICApfVxuICAgICAgICApfVxuICAgICAgICA8UHJldk5leHROYXY+XG4gICAgICAgICAge2RhdGEucHJldmlvdXMgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEucHJldmlvdXMpXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICYjMTcxOyBQcmV2XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtkYXRhLm5leHQgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEubmV4dClcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgTmV4dCAmIzE4NztcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUHJldk5leHROYXY+XG4gICAgICA8L0ZsZXg+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdClcblxuY29uc3QgSXRlbXMgPSBzdHlsZWQuZGl2YFxuICAvKiBkaXY6IG50aC1vZi10eXBlKDEpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0FBRUMyO1xuICB9XG4gIGRpdjogbnRoLW9mLXR5cGUoMikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRDA1RTk7XG4gIH1cbiAgZGl2OiBudGgtb2YtdHlwZSgzKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzZBM0E4MDtcbiAgfVxuICBkaXY6IG50aC1vZi10eXBlKDQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUUwMzAwO1xuICB9ICovXG5cbiAgLyogJiA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogNnB4IDA7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH0gKi9cbiAgfVxuYFxuXG5jb25zdCBJdGVtQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAmID4gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgcCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICB9XG4gIGgyIHtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIHdpZHRoOiA3ODBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDUwcHggNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICB9XG5gXG5cbmNvbnN0IEl0ZW1Db250ZW50Q29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNTBweCA1MHB4O1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBtYXgtd2lkdGg6IDg1MHB4O1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAmID4gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiA2cHggMDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIGNvbG9yOiAjQUQ5MDQ0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuYFxuXG5jb25zdCBQcmV2TmV4dE5hdiA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmctdG9wOiAxLjVlbTtcblxuICAmID4gYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjMzY1NEE4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm94LXNoYWRvdzogMC41cmVtIDAuNXJlbSBibGFjaywgLTAuNXJlbSAtMC41cmVtICNBRDkwNDQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcbiAgfVxuICAmID4gYnV0dG9uOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbmBcblxuY29uc3QgUG9zdFRpdGxlID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgLW1vei1hbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG4gICAgYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCAwcHggMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgICB9XG5cbiAgICBAa2V5ZnJhbWVzIGNvbG9yY2hhbmdlIHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogIzNBQUVDMjtcbiAgICB9XG4gICAgXG4gICAgMTAlIHtcbiAgICAgIGNvbG9yOiAjRkQwNUU5O1xuICAgIH1cbiAgICBcbiAgICAyNSUge1xuICAgICAgY29sb3I6IHllbGxvdztcbiAgICB9XG4gICAgXG4gICAgNTAlIHtcbiAgICAgIGNvbG9yOiAjRUUwMzAwO1xuICAgIH1cbiAgICBcbiAgICBcbiAgICA3NSUge1xuICAgICAgY29sb3I6IHllbGxvdztcbiAgICB9XG5cbiAgICAxMDAlIHtcbiAgICAgIGNvbG9yOiAjRkQwNUU5O1xuICAgIH1cbn1cbmAiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs0\",label:\"PostTitle\"})( false?undefined:{name:\"f5ggu5\",styles:\"text-align:center;-webkit-animation:colorchange 20s infinite alternate;-moz-animation:colorchange 20s infinite alternate;animation:colorchange 20s infinite alternate;@media (max-width: 800px){border-radius:100px 100px 0px 0px;background-color:#000000;}@keyframes colorchange{0%{color:#3AAEC2;}10%{color:#FD05E9;}25%{color:yellow;}50%{color:#EE0300;}75%{color:yellow;}100%{color:#FD05E9;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/list.js\n");

/***/ })

})