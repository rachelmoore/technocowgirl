webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/index.js":
/*!********************************************************!*\
  !*** ./packages/techno-chakra/src/components/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var react_goodreads_shelf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-goodreads-shelf */ \"./node_modules/react-goodreads-shelf/dist/index.es.js\");\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-icons/fa */ \"./node_modules/react-icons/fa/index.esm.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./loading */ \"./packages/techno-chakra/src/components/loading.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error */ \"./packages/techno-chakra/src/components/error.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./list */ \"./packages/techno-chakra/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./post */ \"./packages/techno-chakra/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./page */ \"./packages/techno-chakra/src/components/page.js\");\n/* harmony import */ var _aboutdrawer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./aboutdrawer */ \"./packages/techno-chakra/src/components/aboutdrawer.js\");\n/* harmony import */ var _bookshelf__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./bookshelf */ \"./packages/techno-chakra/src/components/bookshelf.js\");\n/* harmony import */ var _assets_tcsitesunset_jpg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../assets/tcsitesunset.jpg */ \"./packages/techno-chakra/src/assets/tcsitesunset.jpg\");\n/* harmony import */ var _assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../assets/tcsitewalkingrachel.jpg */ \"./packages/techno-chakra/src/assets/tcsitewalkingrachel.jpg\");\n/* harmony import */ var _assets_tcsiteside_jpg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../assets/tcsiteside.jpg */ \"./packages/techno-chakra/src/assets/tcsiteside.jpg\");\n/* harmony import */ var _assets_puppeteer_gif__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../assets/puppeteer.gif */ \"./packages/techno-chakra/src/assets/puppeteer.gif\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"27ol2x-Root\",styles:\"*{margin:0;padding:0;box-sizing:border-box;}html{font-family:\\\"system-ui, Verdana, Arial, sans-serif\\\";}li{line-height:1.85em;}iframe{width:100%!important;}.imgur-video{@media (max-width: 600px){.imgur-video{}width:90vw;}}figure{margin-top:40px;margin-bottom:40px;@media (max-width: 600px){figure{}max-width:90vw;}}li{margin-bottom:10px;line-height:1.55em;font-size:17px;};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);console.log('isFetching',data.isFetching);const[mobileOS,setMobileOS]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false);const[sidebarOpen,setSidebarOpen]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(true);const{isOpen,onOpen,onClose}=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__[\"useDisclosure\"])();// const [loading, setLoading] = useState(data.isFetching);\nconst getMobileOS=()=>{const ua=navigator.userAgent;if(/android/i.test(ua)){return\"Android\";}else if(/iPad|iPhone|iPod/.test(ua)||navigator.platform==='MacIntel'&&navigator.maxTouchPoints>1){return\"iOS\";}return\"Other\";};Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(()=>{const os=getMobileOS();setMobileOS(os);},[]);// useEffect(() => {\n//   if (data.isFetching === false) {\n//     setLoading(false);\n//   }\n// }, [data]);  \nreturn Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__[\"ChakraProvider\"],{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(Container,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_4__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"title\",{children:\"Techno Cowgirl\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"meta\",{name:\"description\",content:\"No, my vet can't hook you up with ketamine.\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_4__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(Menu,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(MenuLeft,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{link:\"/\",children:\"Home\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{link:\"/about-us\",children:\"About Us\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{link:\"/category/horses\",children:\"Horses\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{link:\"/category/coding\",children:\"Coding\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"br\",{})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(MenuRight,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"a\",{href:\"instagram.com/techno_cowgirl\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(react_icons_fa__WEBPACK_IMPORTED_MODULE_9__[\"FaInstagram\"],{})})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(HeaderContent,{children:[mobileOS===\"Other\"&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"span\",{children:\"Techno Cowgirl\"}),(mobileOS===\"Android\"||mobileOS===\"iOS\")&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"span\",{children:\"Techno\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"div\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(\"span\",{children:\"Cowgirl\"})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(MainContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_13__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_14__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__[\"jsx\"])(_error__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isError})]})})})]})});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(Root));const Container=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh7\",label:\"Container\"})( false?undefined:{name:\"7ca65g\",styles:\"background-color:#282c34;font-family:'Roboto';color:#FFFFFF;min-height:100vh\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"header\", false?undefined:{target:\"e81edqh6\",label:\"Header\"})(\"background-color:#e5edee;background:linear-gradient(to top, #0000, #000000),url(\",_assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\");background-position:'center';background-size:cover;background-repeat:'no-repeat';height:700px;h1{color:#FFC300;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh5\",label:\"HeaderContent\"})( false?undefined:{name:\"9dfzbe\",styles:\"max-width:800px;padding:2em 1em;margin:auto;h1{font-family:'Rye',cursive;}span{font-family:'Rye',cursive;letter-spacing:5px;font-size:50px;font-weight:bold;background-image:linear-gradient(\\n\\tto right,\\n\\t#462523 0,\\n       \\t#cb9b51 22%, \\n\\t#f6e27a 45%,\\n\\t#f6f2c0 50%,\\n\\t#f6e27a 55%,\\n\\t#cb9b51 78%,\\n\\t#462523 100%\\n\\t);color:transparent;-webkit-background-clip:text;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MainContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh4\",label:\"MainContainer\"})( false?undefined:{name:\"ho1qnd\",styles:\"display:flex;flex-direction:row\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxTWdDIiwiZmlsZSI6Ii9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZVN0YXRlLCB1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgR2xvYmFsLCBjc3MsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHtcbiAgQnV0dG9uLFxuICBEcmF3ZXIsXG4gIERyYXdlckJvZHksXG4gIERyYXdlckZvb3RlcixcbiAgRHJhd2VySGVhZGVyLFxuICBEcmF3ZXJPdmVybGF5LFxuICBEcmF3ZXJDb250ZW50LFxuICBEcmF3ZXJDbG9zZUJ1dHRvbixcbiAgdXNlRGlzY2xvc3VyZVxufSBmcm9tICdAY2hha3JhLXVpL3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIjtcbmltcG9ydCBTd2l0Y2ggZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL3N3aXRjaFwiO1xuaW1wb3J0IEdvb2RyZWFkc0Jvb2tzaGVsZiBmcm9tIFwicmVhY3QtZ29vZHJlYWRzLXNoZWxmXCI7XG5pbXBvcnQgeyBDaGFrcmFQcm92aWRlciB9IGZyb20gJ0BjaGFrcmEtdWkvcmVhY3QnXG5pbXBvcnQgeyBGYUluc3RhZ3JhbSB9IGZyb20gJ3JlYWN0LWljb25zL2ZhJztcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuL2xvYWRpbmdcIjtcbmltcG9ydCBFcnJvciBmcm9tIFwiLi9lcnJvclwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiO1xuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiO1xuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiO1xuaW1wb3J0IEFib3V0RHJhd2VyIGZyb20gXCIuL2Fib3V0ZHJhd2VyXCI7XG5pbXBvcnQgQm9va3NoZWxmIGZyb20gXCIuL2Jvb2tzaGVsZlwiO1xuaW1wb3J0IHRjc2l0ZXN1bnNldCBmcm9tICcuLi9hc3NldHMvdGNzaXRlc3Vuc2V0LmpwZyc7XG5pbXBvcnQgdGNzaXRld2Fsa2luZ3JhY2hlbCBmcm9tICcuLi9hc3NldHMvdGNzaXRld2Fsa2luZ3JhY2hlbC5qcGcnO1xuaW1wb3J0IHRjc2l0ZXNpZGUgZnJvbSAnLi4vYXNzZXRzL3Rjc2l0ZXNpZGUuanBnJztcbmltcG9ydCBwdXBwZXRlZXIgZnJvbSAnLi4vYXNzZXRzL3B1cHBldGVlci5naWYnO1xuXG5jb25zdCBSb290ID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIGNvbnNvbGUubG9nKCdpc0ZldGNoaW5nJywgZGF0YS5pc0ZldGNoaW5nKVxuICBjb25zdCBbbW9iaWxlT1MsIHNldE1vYmlsZU9TXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbc2lkZWJhck9wZW4sIHNldFNpZGViYXJPcGVuXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCB7IGlzT3Blbiwgb25PcGVuLCBvbkNsb3NlIH0gPSB1c2VEaXNjbG9zdXJlKClcbiAgLy8gY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZGF0YS5pc0ZldGNoaW5nKTtcbiAgY29uc3QgZ2V0TW9iaWxlT1MgPSAoKSA9PiB7XG4gICAgY29uc3QgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50XG4gICAgaWYgKC9hbmRyb2lkL2kudGVzdCh1YSkpIHtcbiAgICAgICAgcmV0dXJuIFwiQW5kcm9pZFwiO1xuICAgIH1cbiAgICBlbHNlIGlmICgoL2lQYWR8aVBob25lfGlQb2QvLnRlc3QodWEpKSB8fCAobmF2aWdhdG9yLnBsYXRmb3JtID09PSAnTWFjSW50ZWwnICYmIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDEpKSB7XG4gICAgICAgIHJldHVybiBcImlPU1wiO1xuICAgIH1cbiAgICByZXR1cm4gXCJPdGhlclwiO1xufVxuXG51c2VFZmZlY3QoKCkgPT4ge1xuICBjb25zdCBvcyA9IGdldE1vYmlsZU9TKCk7XG4gIHNldE1vYmlsZU9TKG9zKTtcbn0sIFtdKTsgIFxuXG4vLyB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gICBpZiAoZGF0YS5pc0ZldGNoaW5nID09PSBmYWxzZSkge1xuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xuLy8gICB9XG4vLyB9LCBbZGF0YV0pOyAgXG5cbiAgcmV0dXJuIChcbiAgICA8Q2hha3JhUHJvdmlkZXI+XG4gICAgICA8Q29udGFpbmVyPlxuICAgICAgICA8SGVhZD5cbiAgICAgICAgICA8dGl0bGU+VGVjaG5vIENvd2dpcmw8L3RpdGxlPlxuICAgICAgICAgIDxtZXRhXG4gICAgICAgICAgICBuYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgY29udGVudD1cIk5vLCBteSB2ZXQgY2FuJ3QgaG9vayB5b3UgdXAgd2l0aCBrZXRhbWluZS5cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvSGVhZD5cbiAgICAgICAgPEdsb2JhbFxuICAgICAgICAgIHN0eWxlcz17Y3NzYFxuICAgICAgICAgICoge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGh0bWwge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwic3lzdGVtLXVpLCBWZXJkYW5hLCBBcmlhbCwgc2Fucy1zZXJpZlwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsaSB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS44NWVtO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZnJhbWUge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmltZ3VyLXZpZGVvIHtcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICAgICAgICB3aWR0aDogOTB2dztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZmlndXJlIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgICAgICAgIG1heC13aWR0aDogOTB2dztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU1ZW07XG4gICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgICAvPlxuICAgICAgICA8SGVhZGVyIGlzUG9zdFR5cGU9e2RhdGEuaXNQb3N0VHlwZX0gaXNQYWdlPXtkYXRhLmlzUGFnZX0+XG4gICAgICAgIDxNZW51PlxuICAgICAgICAgIDxNZW51TGVmdD5cbiAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvXCI+SG9tZTwvTGluaz5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgPExpbmsgbGluaz1cIi9hYm91dC11c1wiPkFib3V0IFVzPC9MaW5rPlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICA8TGluayBsaW5rPVwiL2NhdGVnb3J5L2hvcnNlc1wiPkhvcnNlczwvTGluaz5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgPExpbmsgbGluaz1cIi9jYXRlZ29yeS9jb2RpbmdcIj5Db2Rpbmc8L0xpbms+XG4gICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICA8L01lbnVMZWZ0PlxuICAgICAgICAgIDxNZW51UmlnaHQ+XG4gICAgICAgICAgICA8YSBocmVmPVwiaW5zdGFncmFtLmNvbS90ZWNobm9fY293Z2lybFwiPjxGYUluc3RhZ3JhbSAvPjwvYT5cbiAgICAgICAgICA8L01lbnVSaWdodD5cbiAgICAgICAgPC9NZW51PlxuICAgICAgICAgIDxIZWFkZXJDb250ZW50PlxuICAgICAgICAgICAgeyhtb2JpbGVPUyA9PT0gXCJPdGhlclwiKSAmJlxuICAgICAgICAgICAgPHNwYW4+VGVjaG5vIENvd2dpcmw8L3NwYW4+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7KG1vYmlsZU9TID09PSBcIkFuZHJvaWRcIiB8fCBtb2JpbGVPUyA9PT0gXCJpT1NcIikgJiZcbiAgICAgICAgICAgIDw+XG4gICAgICAgICAgICA8c3Bhbj5UZWNobm88L3NwYW4+XG4gICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgICAgPHNwYW4+Q293Z2lybDwvc3Bhbj5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvSGVhZGVyQ29udGVudD5cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICAgIDxNYWluQ29udGFpbmVyPlxuICAgICAgICAgIDxNYWluPlxuICAgICAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICAgICAgey8qIDxMb2FkaW5nIHdoZW49e2RhdGEuaXNGZXRjaGluZ30gLz4gKi99XG4gICAgICAgICAgICAgIDxMaXN0IHdoZW49e2RhdGEuaXNBcmNoaXZlfSAvPlxuICAgICAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdH0gLz5cbiAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc1BhZ2V9IC8+XG4gICAgICAgICAgICAgIDxFcnJvciB3aGVuPXtkYXRhLmlzRXJyb3J9IC8+XG4gICAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgICA8L01haW4+XG4gICAgICAgIDwvTWFpbkNvbnRhaW5lcj5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvQ2hha3JhUHJvdmlkZXI+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChSb290KVxuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuYmFja2dyb3VuZC1jb2xvcjogIzI4MmMzNDtcbmZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbmNvbG9yOiAjRkZGRkZGO1xubWluLWhlaWdodDogMTAwdmg7XG5gXG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXG5iYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZGVlO1xuYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzAwMDAsICMwMDAwMDApLCB1cmwoJHt0Y3NpdGV3YWxraW5ncmFjaGVsfSk7XG5iYWNrZ3JvdW5kLXBvc2l0aW9uOiAnY2VudGVyJzsgXG5iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBcbmJhY2tncm91bmQtcmVwZWF0OiAnbm8tcmVwZWF0JztcbmhlaWdodDogNzAwcHg7XG5oMSB7XG4gIGNvbG9yOiAjRkZDMzAwO1xufVxuYFxuXG5jb25zdCBIZWFkZXJDb250ZW50ID0gc3R5bGVkLmRpdmBcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgcGFkZGluZzogMmVtIDFlbTtcbiAgbWFyZ2luOiBhdXRvO1xuICBoMSB7XG4gICAgZm9udC1mYW1pbHk6ICdSeWUnLCBjdXJzaXZlO1xuICB9XG4gIHNwYW57XG4gICBmb250LWZhbWlseTogJ1J5ZScsIGN1cnNpdmU7XG4gICBsZXR0ZXItc3BhY2luZzogNXB4O1xuICAgZm9udC1zaXplOiA1MHB4O1xuICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXG5cdHRvIHJpZ2h0LFxuXHQjNDYyNTIzIDAsXG4gICAgICAgXHQjY2I5YjUxIDIyJSwgXG5cdCNmNmUyN2EgNDUlLFxuXHQjZjZmMmMwIDUwJSxcblx0I2Y2ZTI3YSA1NSUsXG5cdCNjYjliNTEgNzglLFxuXHQjNDYyNTIzIDEwMCVcblx0KTtcbiAgIGNvbG9yOnRyYW5zcGFyZW50O1xuICAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtcbn1cbmBcblxuY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5gXG5cbmNvbnN0IE1haW4gPSBzdHlsZWQubWFpbmBcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgLyogd2lkdGg6IDgwJTsgKi9cbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuXG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIGgyIHtcbiAgICBtYXJnaW46IDAuNWVtIDA7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICB9XG4gIHAge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICB9XG4gIGZpZ2NhcHRpb24ge1xuICAgIGNvbG9yOiAjODI4MjgyO1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG4gIGEge1xuICAgIGNvbG9yOiAjQUQ5MDQ0O1xuICAgIGZvbnQtZmFtaWx5OiAnSW5jb25zb2xhdGEnLCBtb25vc3BhY2U7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgfVxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgfVxuYFxuXG5jb25zdCBNZW51ID0gc3R5bGVkLm5hdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYmFja2dyb3VuZC1jb2xvcjogI0FEOTA0NDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAyMHB4O1xuYFxuXG5jb25zdCBNZW51TGVmdCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICYgPiBhIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6ICdJbmNvbnNvbGF0YScsIG1vbm9zcGFjZTtcbiAgfVxuYFxuXG5jb25zdCBNZW51UmlnaHQgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAvKiB3aWR0aDogODAwcHg7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luOiBhdXRvOyAqL1xuICAvKiBwYWRkaW5nOiAxZW07XG4gIG1hcmdpbjogYXV0bzsgKi9cbiAgJiA+IGEge1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJywgbW9ub3NwYWNlO1xuICB9XG5gIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"main\", false?undefined:{target:\"e81edqh3\",label:\"Main\"})( false?undefined:{name:\"1yvvv2j\",styles:\"max-width:800px;padding:1em;margin-left:auto;margin-right:auto;margin-bottom:auto;img{max-width:100%;}h2{margin:0.5em 0;font-size:32px;}p{margin-top:10px;line-height:1.55em;margin-bottom:0.75em;font-size:17px;}figcaption{color:#828282;font-size:0.8em;margin-bottom:1em;}a{color:#AD9044;font-family:'Inconsolata',monospace;text-decoration:underline;letter-spacing:2px;}a:hover{color:#FFFFFF;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"nav\", false?undefined:{target:\"e81edqh2\",label:\"Menu\"})( false?undefined:{name:\"2othve\",styles:\"display:flex;flex-direction:row;background-color:#AD9044;justify-content:space-between;padding:20px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuLeft=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh1\",label:\"MenuLeft\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuRight=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh0\",label:\"MenuRight\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/index.js\n");

/***/ })

})