webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/list.js":
/*!*******************************************************!*\
  !*** ./packages/techno-chakra/src/components/list.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loading */ \"./packages/techno-chakra/src/components/loading.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const List=({state,actions,libraries})=>{const data=state.source.get(state.router.link);const Html2React=libraries.html2react.Component;const[fullScreen,setFullScreen]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(true);const[isLargerThan800]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 800px)\");const[isLargerThan1015]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 1015px)\");const colorDict={0:\"#3AAEC2\",1:\"#EE0300\",2:\"#6A3A80\"};const borderDict={0:\"0px 0px 5px 5px\",1:\"5px 5px 5px 0px\",2:\"5px 0px 0px 5px\"};Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(()=>{if(isLargerThan800){setFullScreen(true);}else{setFullScreen(false);}},[isLargerThan800]);if(data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{});}if(!data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"100%\",children:[data.items.map((item,idx)=>{const post=state.source[item.type][item.id];return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContainer,{children:[fullScreen&&idx%2!==0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row\",width:\"100%\",sx:{'--custom-bg-odd':colorDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-odd)\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),fullScreen&&idx%2===0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row-reverse\",width:\"100%\",sx:{'--custom-bg-even':colorDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-even)\",style:{border:`${borderDict[idx]} solid #000000`},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),!fullScreen&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContentContainer,{children:[state.source.attachment[post.featured_media]&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Image\"],{src:state.source.attachment[post.featured_media].source_url}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,children:\"Read More\"},item.id)]})]})]});}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(PrevNextNav,{children:[data.previous&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.previous);},children:\"\\xAB Prev\"}),data.next&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.next);},children:\"Next \\xBB\"})]})]});}};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(List));const ItemContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs3\",label:\"ItemContainer\"})( false?undefined:{name:\"mi7yei\",styles:\"background-color:#FFFFFF;color:#000000;width:100%;margin-bottom:0px;&>a{display:block;font-size:1.2em;color:#AD9044;text-decoration:none;}p{font-size:22px;color:#FFFFFF;}h2{margin-top:0px;font-size:36px;}@media (min-width: 801px){width:100%;margin-bottom:0px;}@media (max-width: 800px){width:780px;border-radius:100px 100px 50px 50px;margin-bottom:60px;p{font-size:22px;color:#000000;}}@media (max-width: 600px){width:350px;border-radius:100px 100px 50px 50px;margin-bottom:60px;p{font-size:22px;color:#000000;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const ItemContentContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs2\",label:\"ItemContentContainer\"})( false?undefined:{name:\"10fa48f\",styles:\"background-color:#FFFFFF;color:#000000;border-radius:0px 0px 50px 50px;padding-left:20px;padding-right:20px;padding-bottom:20px;width:100%;@media (max-width: 800px){max-width:780px;}margin-bottom:60px;&>a{color:blue;font-family:'Inconsolata',monospace;text-decoration:underline;letter-spacing:2px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PrevNextNav=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs1\",label:\"PrevNextNav\"})( false?undefined:{name:\"b2xp23\",styles:\"padding-top:1.5em;&>button{background:#3654A8;border:none;color:#FFFFFF;text-decoration:none;font-size:20px;margin-right:2em;padding:10px;box-shadow:0.5rem 0.5rem black,-0.5rem -0.5rem #AD9044;transition:all 0.3s ease 0s;}&>button:hover{cursor:pointer;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9saXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStMOEIiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL2xpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkaW5nLCBUZXh0LCBGbGV4LCBJbWFnZSwgdXNlTWVkaWFRdWVyeSB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIlxuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIlxuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuXG5jb25zdCBMaXN0ID0gKHsgc3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcyB9KSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgY29uc3QgW2Z1bGxTY3JlZW4sIHNldEZ1bGxTY3JlZW5dID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtpc0xhcmdlclRoYW44MDBdID0gdXNlTWVkaWFRdWVyeShcIihtaW4td2lkdGg6IDgwMHB4KVwiKTtcbiAgY29uc3QgW2lzTGFyZ2VyVGhhbjEwMTVdID0gdXNlTWVkaWFRdWVyeShcIihtaW4td2lkdGg6IDEwMTVweClcIik7XG4gIGNvbnN0IGNvbG9yRGljdCA9IHtcbiAgICAwOiBcIiMzQUFFQzJcIixcbiAgICAxOiBcIiNFRTAzMDBcIixcbiAgICAyOiBcIiM2QTNBODBcIixcbiAgfVxuICBjb25zdCBib3JkZXJEaWN0ID0ge1xuICAgIDA6IFwiMHB4IDBweCA1cHggNXB4XCIsXG4gICAgMTogXCI1cHggNXB4IDVweCAwcHhcIixcbiAgICAyOiBcIjVweCAwcHggMHB4IDVweFwiXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0xhcmdlclRoYW44MDApIHtcbiAgICAgIHNldEZ1bGxTY3JlZW4odHJ1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgc2V0RnVsbFNjcmVlbihmYWxzZSk7XG4gICAgfVxuICB9LCBbaXNMYXJnZXJUaGFuODAwXSlcblxuICBpZiAoZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIDxMb2FkaW5nIC8+XG4gIH1cblxuICBpZiAoIWRhdGEuaXNGZXRjaGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjEwMCVcIj5cbiAgICAgICAge2RhdGEuaXRlbXMubWFwKChpdGVtLCBpZHgpID0+IHtcbiAgICAgICAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2l0ZW0udHlwZV1baXRlbS5pZF1cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxJdGVtQ29udGFpbmVyPlxuICAgICAgICAgICAge2Z1bGxTY3JlZW4gJiYgKGlkeCAlIDIgIT09IDApICYmXG4gICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cInJvd1wiIHdpZHRoPVwiMTAwJVwiIHN4PXt7ICctLWN1c3RvbS1iZy1vZGQnOiBjb2xvckRpY3RbaWR4XX19PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgcGFkZGluZz17MTB9IGJnPSd2YXIoLS1jdXN0b20tYmctb2RkKSc+XG4gICAgICAgICAgICAgICAgICA8TGluayBrZXk9e2l0ZW0uaWR9IGxpbms9e3Bvc3QubGlua30gc3R5bGU9e3t0ZXh0RGVjb3JhdGlvbjogXCJub25lXCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgICA8SGVhZGluZyBzaXplPVwibGdcIiBwYj17NX0gcHQ9ezV9Pntwb3N0LnRpdGxlLnJlbmRlcmVkfTwvSGVhZGluZz5cbiAgICAgICAgICAgICAgICAgICAgPC9Qb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17cG9zdC5leGNlcnB0LnJlbmRlcmVkfSAvPlxuICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjUwJVwiIHN0eWxlPXt7IGJhY2tncm91bmQ6IGB1cmwoXCIke3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdLnNvdXJjZV91cmx9XCIpYCwgYmFja2dyb3VuZFBvc2l0aW9uOiBcImNlbnRlclwiLCBiYWNrZ3JvdW5kU2l6ZTogXCJjb3ZlclwiLCBiYWNrZ3JvdW5kUmVwZWF0OiBcIm5vLXJlcGVhdFwiIH19PlxuICAgICAgICAgICAgICAgICAgey8qIHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXSAmJlxuICAgICAgICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfSAvPlxuICAgICAgICAgICAgICAgICAgICB9ICovfVxuICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge2Z1bGxTY3JlZW4gJiYgKGlkeCAlIDIgPT09IDApICYmXG4gICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cInJvdy1yZXZlcnNlXCIgd2lkdGg9XCIxMDAlXCIgc3g9e3sgJy0tY3VzdG9tLWJnLWV2ZW4nOiBjb2xvckRpY3RbaWR4XX19PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgcGFkZGluZz17MTB9IGJnPSd2YXIoLS1jdXN0b20tYmctZXZlbiknIHN0eWxlPXt7Ym9yZGVyOiBgJHtib3JkZXJEaWN0W2lkeF19IHNvbGlkICMwMDAwMDBgfX0+XG4gICAgICAgICAgICAgICAgICA8TGluayBrZXk9e2l0ZW0uaWR9IGxpbms9e3Bvc3QubGlua30gc3R5bGU9e3t0ZXh0RGVjb3JhdGlvbjogXCJub25lXCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgICA8SGVhZGluZyBzaXplPVwibGdcIiBwYj17NX0gcHQ9ezV9Pntwb3N0LnRpdGxlLnJlbmRlcmVkfTwvSGVhZGluZz5cbiAgICAgICAgICAgICAgICAgICAgPC9Qb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17cG9zdC5leGNlcnB0LnJlbmRlcmVkfSAvPlxuICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjUwJVwiIHN0eWxlPXt7IGJhY2tncm91bmQ6IGB1cmwoXCIke3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdLnNvdXJjZV91cmx9XCIpYCwgYmFja2dyb3VuZFBvc2l0aW9uOiBcImNlbnRlclwiLCBiYWNrZ3JvdW5kU2l6ZTogXCJjb3ZlclwiLCBiYWNrZ3JvdW5kUmVwZWF0OiBcIm5vLXJlcGVhdFwiIH19PlxuICAgICAgICAgICAgICAgICAgey8qIHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXSAmJlxuICAgICAgICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfSAvPlxuICAgICAgICAgICAgICAgICAgICB9ICovfVxuICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgfVxuICAgICAgICAgIHshZnVsbFNjcmVlbiAmJlxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9IHN0eWxlPXt7dGV4dERlY29yYXRpb246IFwibm9uZVwifX0+XG4gICAgICAgICAgICAgICAgPFBvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJsZ1wiIHBiPXs1fSBwdD17NX0+e3Bvc3QudGl0bGUucmVuZGVyZWR9PC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgIDwvUG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDxJdGVtQ29udGVudENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICB7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0gJiZcbiAgICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXS5zb3VyY2VfdXJsfSAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmV4Y2VycHQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgICAgICAgPExpbmsga2V5PXtpdGVtLmlkfSBsaW5rPXtwb3N0Lmxpbmt9PlxuICAgICAgICAgICAgICAgICAgUmVhZCBNb3JlXG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L0l0ZW1Db250ZW50Q29udGFpbmVyPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA8L0l0ZW1Db250YWluZXI+XG4gICAgICAgICAgKX1cbiAgICAgICAgKX1cbiAgICAgICAgPFByZXZOZXh0TmF2PlxuICAgICAgICAgIHtkYXRhLnByZXZpb3VzICYmIChcbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGFjdGlvbnMucm91dGVyLnNldChkYXRhLnByZXZpb3VzKVxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAmIzE3MTsgUHJldlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7ZGF0YS5uZXh0ICYmIChcbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGFjdGlvbnMucm91dGVyLnNldChkYXRhLm5leHQpXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIE5leHQgJiMxODc7XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L1ByZXZOZXh0TmF2PlxuICAgICAgPC9GbGV4PlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KExpc3QpXG5cbmNvbnN0IEl0ZW1Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgJiA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgY29sb3I6ICNBRDkwNDQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG4gIHAge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgfVxuICBoMiB7XG4gICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogODAxcHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgd2lkdGg6IDc4MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDUwcHggNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAgIHAge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgfVxuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCA1MHB4IDUwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgICBwIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgY29sb3I6ICMwMDAwMDA7XG4gIH1cbiAgfVxuYFxuXG5jb25zdCBJdGVtQ29udGVudENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBib3JkZXItcmFkaXVzOiAwcHggMHB4IDUwcHggNTBweDtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkgeyAgXG4gICAgbWF4LXdpZHRoOiA3ODBweDtcbiAgfVxuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAmID4gYSB7XG4gICAgY29sb3I6IGJsdWU7XG4gICAgZm9udC1mYW1pbHk6ICdJbmNvbnNvbGF0YScsIG1vbm9zcGFjZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICB9XG5gXG5cbmNvbnN0IFByZXZOZXh0TmF2ID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZy10b3A6IDEuNWVtO1xuXG4gICYgPiBidXR0b24ge1xuICAgIGJhY2tncm91bmQ6ICMzNjU0QTg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyZW07XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3gtc2hhZG93OiAwLjVyZW0gMC41cmVtIGJsYWNrLCAtMC41cmVtIC0wLjVyZW0gI0FEOTA0NDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICB9XG4gICYgPiBidXR0b246aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuYFxuXG5jb25zdCBQb3N0VGl0bGUgPSBzdHlsZWQuZGl2YFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogY29sb3JjaGFuZ2UgMjBzIGluZmluaXRlIGFsdGVybmF0ZTtcbiAgICAtbW96LWFuaW1hdGlvbjogY29sb3JjaGFuZ2UgMjBzIGluZmluaXRlIGFsdGVybmF0ZTtcbiAgICBhbmltYXRpb246IGNvbG9yY2hhbmdlIDIwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDBweCAwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgY29sb3JjaGFuZ2Uge1xuICAgIDAlIHtcbiAgICAgIGNvbG9yOiAjM0FBRUMyO1xuICAgIH1cbiAgICBcbiAgICAxMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxuICAgIFxuICAgIDI1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cbiAgICBcbiAgICA1MCUge1xuICAgICAgY29sb3I6ICNFRTAzMDA7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIDc1JSB7XG4gICAgICBjb2xvcjogeWVsbG93O1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgY29sb3I6ICNGRDA1RTk7XG4gICAgfVxufVxuYCJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs0\",label:\"PostTitle\"})( false?undefined:{name:\"f5ggu5\",styles:\"text-align:center;-webkit-animation:colorchange 20s infinite alternate;-moz-animation:colorchange 20s infinite alternate;animation:colorchange 20s infinite alternate;@media (max-width: 800px){border-radius:100px 100px 0px 0px;background-color:#000000;}@keyframes colorchange{0%{color:#3AAEC2;}10%{color:#FD05E9;}25%{color:yellow;}50%{color:#EE0300;}75%{color:yellow;}100%{color:#FD05E9;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/list.js\n");

/***/ })

})