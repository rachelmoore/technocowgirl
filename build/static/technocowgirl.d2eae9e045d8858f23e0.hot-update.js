webpackHotUpdate("technocowgirl",{

/***/ "./node_modules/react-goodreads-shelf/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-goodreads-shelf/dist/index.es.js ***!
  \*************************************************************/
/*! exports provided: GoodreadsBookshelf, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoodreadsBookshelf\", function() { return GoodreadsBookshelf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GoodreadsBookshelf; });\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.url.js */ \"./node_modules/core-js/modules/web.url.js\");\n/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.sort.js */ \"./node_modules/core-js/modules/es.array.sort.js\");\n/* harmony import */ var core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.string.search.js */ \"./node_modules/core-js/modules/es.string.search.js\");\n/* harmony import */ var core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"./node_modules/core-js/modules/es.regexp.to-string.js\");\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ \"./node_modules/core-js/modules/es.string.trim.js\");\n/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.promise.js */ \"./node_modules/core-js/modules/es.promise.js\");\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ \"./node_modules/core-js/modules/es.object.assign.js\");\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.string.split.js */ \"./node_modules/core-js/modules/es.string.split.js\");\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_13__);\nconst getUrl=props=>{const url=new URL(`https://www.goodreads.com/review/list/${props.userId}`);url.searchParams.set(\"per_page\",String(props.limit||10));url.searchParams.set(\"shelf\",props.shelf||\"read\");url.searchParams.set(\"sort\",props.sort||\"date_read\");url.searchParams.set(\"order\",props.order||\"d\");if(props.search){url.searchParams.set(\"search[query]\",props.search);}return new URL(`https://cors.kylekarpack.workers.dev/corsproxy/?apiurl=${encodeURIComponent(url.toString())}`);};const bookMapper=(row,index,thumbnailWidth)=>{var _a,_b,_c,_d,_e,_f,_g,_h,_i;const isbn=(_b=(_a=row==null?void 0:row.querySelector(\"td.field.isbn .value\"))==null?void 0:_a.textContent)==null?void 0:_b.trim();const title=(_d=(_c=row==null?void 0:row.querySelector(\"td.field.title a\"))==null?void 0:_c.getAttribute(\"title\"))!=null?_d:\"\";const author=(_f=(_e=row==null?void 0:row.querySelector(\"td.field.author .value\"))==null?void 0:_e.textContent)==null?void 0:_f.trim();const imageUrl=(_h=(_g=row==null?void 0:row.querySelector(\"td.field.cover img\"))==null?void 0:_g.getAttribute(\"src\"))==null?void 0:_h.replace(/\\._(S[Y|X]\\d+_?){1,2}_/i,`._SX${thumbnailWidth*1.5}_`);const href=(_i=row==null?void 0:row.querySelector(\"td.field.cover a\"))==null?void 0:_i.getAttribute(\"href\");return{id:`${isbn}_${index}`,isbn,title,author,imageUrl,link:`https://www.goodreads.com/${href}`};};const getBooksFromHtml=(html,limit=10,width=150)=>{const parser=new DOMParser();const goodreadsDocument=parser.parseFromString(html,\"text/html\");const bookElements=goodreadsDocument.querySelectorAll(\"#booksBody .bookalike\");const bookArray=Array.from(bookElements).slice(0,limit);if(typeof width!==\"number\"){width=100;}return bookArray.map((el,i)=>bookMapper(el,i,width));};const useGoodreadsShelf=props=>{const{userId,limit,order,search,shelf,sort,width}=props;const[books,setBooks]=Object(react__WEBPACK_IMPORTED_MODULE_13__[\"useState\"])([]);const[loading,setLoading]=Object(react__WEBPACK_IMPORTED_MODULE_13__[\"useState\"])(false);const[error,setError]=Object(react__WEBPACK_IMPORTED_MODULE_13__[\"useState\"])(null);const fetchBooks=async()=>{try{setLoading(true);setError(null);const url=getUrl(props);const response=await window.fetch(url.toString());const html=await response.text();const booksResult=getBooksFromHtml(html,limit,width);setBooks(booksResult);}catch(err){setError(err);}finally{setLoading(false);}};Object(react__WEBPACK_IMPORTED_MODULE_13__[\"useEffect\"])(()=>{if(!userId){return;}fetchBooks();},[userId,limit,order,search,shelf,sort]);return{books,loading,error};};var jsxRuntime={exports:{}};var reactJsxRuntime_production_min={};/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/var getOwnPropertySymbols=Object.getOwnPropertySymbols;var hasOwnProperty=Object.prototype.hasOwnProperty;var propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val===null||val===void 0){throw new TypeError(\"Object.assign cannot be called with null or undefined\");}return Object(val);}function shouldUseNative(){try{if(!Object.assign){return false;}var test1=new String(\"abc\");test1[5]=\"de\";if(Object.getOwnPropertyNames(test1)[0]===\"5\"){return false;}var test2={};for(var i=0;i<10;i++){test2[\"_\"+String.fromCharCode(i)]=i;}var order2=Object.getOwnPropertyNames(test2).map(function(n2){return test2[n2];});if(order2.join(\"\")!==\"0123456789\"){return false;}var test3={};\"abcdefghijklmnopqrst\".split(\"\").forEach(function(letter){test3[letter]=letter;});if(Object.keys(Object.assign({},test3)).join(\"\")!==\"abcdefghijklmnopqrst\"){return false;}return true;}catch(err){return false;}}shouldUseNative()?Object.assign:function(target,source){var from;var to=toObject(target);var symbols;for(var s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from){if(hasOwnProperty.call(from,key)){to[key]=from[key];}}if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++){if(propIsEnumerable.call(from,symbols[i])){to[symbols[i]]=from[symbols[i]];}}}}return to;};/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var f=react__WEBPACK_IMPORTED_MODULE_13___default.a,g=60103;reactJsxRuntime_production_min.Fragment=60107;if(typeof Symbol===\"function\"&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");reactJsxRuntime_production_min.Fragment=h(\"react.fragment\");}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:true,ref:true,__self:true,__source:true};function q(c,a,k){var b,d={},e=null,l=null;k!==void 0&&(e=\"\"+k);a.key!==void 0&&(e=\"\"+a.key);a.ref!==void 0&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)d[b]===void 0&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current};}reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;{jsxRuntime.exports=reactJsxRuntime_production_min;}const jsx=jsxRuntime.exports.jsx;const jsxs=jsxRuntime.exports.jsxs;const Placeholder=()=>{return/* @__PURE__ */jsx(\"div\",{children:/* @__PURE__ */jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",style:{width:\"100%\"},viewBox:\"0 0 170 250\",children:[/* @__PURE__ */jsx(\"path\",{style:{fill:\"#ffffff\",stroke:\"none\"},d:\"M0 0L0 240L170 240L170 0L0 0z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M82 61L83 62L82 61z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#808080\",stroke:\"none\"},d:\"M93 145C79.6257 141.205 63.417 138.566 51.0401 132.235C46.9518 130.144 41.5316 121.554 47.3179 118.068C50.6475 116.062 56.6487 119.038 60 120L80 125.579C83.4433 126.56 87.3543 128.206 90.9961 127.812C95.0859 127.369 97.4951 123.882 100 120.999C105.227 114.984 110.546 109.055 115.729 103C121.144 96.673 126.701 90.4409 131.981 84C134.072 81.4479 137.039 77.7432 134.957 74.3032C133.56 71.995 130.402 71.472 128 70.885C122.364 69.5077 116.654 68.419 111 67.1188C104.688 65.6674 98.3344 64.3539 92 63C89.2014 62.4019 85.8624 61.1288 83 61.9159C76.588 63.679 71.3975 72.3808 67.0355 77C63.9636 80.253 61.0812 83.6855 58.0748 87C47.4655 98.6969 26.6977 117.282 38.9699 134.907C42.2427 139.607 47.7809 141.351 53 142.975C62.2818 145.863 71.6555 148.463 81 151.141C85.2587 152.362 91.5271 155.739 95.9105 153.731C99.4375 152.115 102.007 147.89 104.414 145C109.434 138.971 114.602 133.068 119.576 127C126.295 118.802 135.654 111.058 135.454 100C135.402 97.0889 136.725 92.9476 133.685 91.0471C129.481 88.4187 126.946 93.731 126.329 97.0008C122.619 116.665 101.124 127.263 93 145z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M85 61L86 62L85 61M112 67L113 68L112 67M117 68L118 69L117 68M72 71L73 72L72 71z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#555555\",stroke:\"none\"},d:\"M80 78L81 79L80 78z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#ffffff\",stroke:\"none\"},d:\"M77 84C83.6869 85.3802 90.3853 87.037 97 88.7315C103.67 90.4403 109.474 92.3156 113 85C105.981 83.9673 98.9214 81.7562 92 80.1157C85.4991 78.5749 80.3963 76.9541 77 84z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M110 89L111 90L110 89M54 91L55 92L54 91z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#aaaaaa\",stroke:\"none\"},d:\"M122 108L123 109L122 108z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M121 109L122 110L121 109M37 112L38 113L37 112M116 115L117 116L116 115z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#555555\",stroke:\"none\"},d:\"M103 116L104 117L103 116M46 117L47 118L46 117M45 118L46 119L45 118z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M124 120L125 121L124 120M69 122L70 123L69 122M37 132L38 133L37 132M50 132L51 133L50 132M42 138L43 139L42 138M109 138L110 139L109 138z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#555555\",stroke:\"none\"},d:\"M87 143L88 144L87 143z\"}),/* @__PURE__ */jsx(\"path\",{style:{fill:\"#000000\",stroke:\"none\"},d:\"M99 150L100 151L99 150M82 151L83 152L82 151z\"})]})});};const bookStyle={textAlign:\"left\"};const imageStyle={width:\"100%\"};const Book=({book})=>{const[state,setState]=Object(react__WEBPACK_IMPORTED_MODULE_13__[\"useState\"])({error:false});const onError=()=>setState({error:true});if(!book){return null;}return/* @__PURE__ */jsx(\"div\",{style:bookStyle,title:book.title,children:/* @__PURE__ */jsx(\"a\",{href:book.link,target:\"_blank\",rel:\"nofollow noreferrer\",children:state.error?/* @__PURE__ */jsx(\"div\",{\"data-testid\":\"placeholder\",children:/* @__PURE__ */jsx(Placeholder,{})}):/* @__PURE__ */jsx(\"img\",{alt:book.title,style:imageStyle,src:book.imageUrl,onError})})});};const shelfStyle=(minWidth=150)=>{if(typeof minWidth===\"number\"){minWidth=`${minWidth}px`;}return{display:\"grid\",gridTemplateColumns:`repeat(auto-fill, ${minWidth})`,justifyContent:\"space-around\",alignItems:\"center\",gridColumnGap:\"0.5rem\",gridRowGap:\"0.5rem\"};};const BookList=({books,bookWidth})=>{return/* @__PURE__ */jsx(\"div\",{style:shelfStyle(bookWidth),children:books.map(book=>{return/* @__PURE__ */jsx(Book,{book},book.id);})});};const Loader=()=>{return/* @__PURE__ */jsx(\"div\",{style:{textAlign:\"center\"},children:/* @__PURE__ */jsxs(\"svg\",{width:50,height:50,xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 100 100\",preserveAspectRatio:\"xMidYMid\",children:[/* @__PURE__ */jsx(\"path\",{d:\"M20 25h60v50H20z\",fill:\"#fdfdfd\",stroke:\"#85a2b6\"}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25l9.421-3.43v56.86L50 75\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\",keyTimes:\"0;0.5;0.501;1\",dur:1.6,begin:\"0s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"1;1;0;0\",keyTimes:\"0;0.5;0.5001;1\",dur:1.6,begin:\"0s\",repeatCount:\"indefinite\"})]}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25h30v50H50\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\",keyTimes:\"0;0.5;0.501;1\",dur:1.6,begin:\"-0.2656s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"1;1;0;0\",keyTimes:\"0;0.5;0.5001;1\",dur:1.6,begin:\"-0.2656s\",repeatCount:\"indefinite\"})]}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25h30v50H50\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\",keyTimes:\"0;0.5;0.501;1\",dur:1.6,begin:\"-0.528s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"1;1;0;0\",keyTimes:\"0;0.5;0.5001;1\",dur:1.6,begin:\"-0.528s\",repeatCount:\"indefinite\"})]}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25l-10.379-3.27v56.54L50 75\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\",keyTimes:\"0;0.499;0.5;1\",dur:1.6,begin:\"-0.528s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"0;0;1;1\",keyTimes:\"0;0.4999;0.5;1\",dur:1.6,begin:\"-0.528s\",repeatCount:\"indefinite\"})]}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25l-.539-4.91v59.82L50 75\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\",keyTimes:\"0;0.499;0.5;1\",dur:1.6,begin:\"-0.2656s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"0;0;1;1\",keyTimes:\"0;0.4999;0.5;1\",dur:1.6,begin:\"-0.2656s\",repeatCount:\"indefinite\"})]}),/* @__PURE__ */jsxs(\"path\",{d:\"M50 25H20v50h30\",fill:\"#fdfdfd\",stroke:\"#85a2b6\",children:[/* @__PURE__ */jsx(\"animate\",{attributeName:\"d\",calcMode:\"linear\",values:\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\",keyTimes:\"0;0.499;0.5;1\",dur:1.6,begin:\"0s\",repeatCount:\"indefinite\"}),/* @__PURE__ */jsx(\"animate\",{attributeName:\"opacity\",calcMode:\"linear\",values:\"0;0;1;1\",keyTimes:\"0;0.4999;0.5;1\",dur:1.6,begin:\"0s\",repeatCount:\"indefinite\"})]})]})});};const GoodreadsBookshelf=props=>{const{books,loading,error}=useGoodreadsShelf(props);return/* @__PURE__ */jsxs(\"div\",{className:\"goodreads-shelf\",children:[loading?/* @__PURE__ */jsx(Loader,{}):/* @__PURE__ */jsx(BookList,{books,bookWidth:props.width}),error&&/* @__PURE__ */jsx(\"div\",{children:\"Sorry, we couldn't load books right now\"})]});};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-goodreads-shelf/dist/index.es.js\n");

/***/ }),

/***/ "./packages/arizona-theme/src/components/index.js":
/*!********************************************************!*\
  !*** ./packages/arizona-theme/src/components/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var react_goodreads_shelf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-goodreads-shelf */ \"./node_modules/react-goodreads-shelf/dist/index.es.js\");\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-icons/fa */ \"./node_modules/react-icons/fa/index.esm.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loading */ \"./packages/arizona-theme/src/components/loading.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./error */ \"./packages/arizona-theme/src/components/error.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./list */ \"./packages/arizona-theme/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./post */ \"./packages/arizona-theme/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./page */ \"./packages/arizona-theme/src/components/page.js\");\n/* harmony import */ var _assets_tcsitesunset_jpg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../assets/tcsitesunset.jpg */ \"./packages/arizona-theme/src/assets/tcsitesunset.jpg\");\n/* harmony import */ var _assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../assets/tcsitewalkingrachel.jpg */ \"./packages/arizona-theme/src/assets/tcsitewalkingrachel.jpg\");\n/* harmony import */ var _assets_tcsiteside_jpg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../assets/tcsiteside.jpg */ \"./packages/arizona-theme/src/assets/tcsiteside.jpg\");\n/* harmony import */ var _assets_puppeteer_gif__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../assets/puppeteer.gif */ \"./packages/arizona-theme/src/assets/puppeteer.gif\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"zjoldf-Root\",styles:\"*{margin:0;padding:0;box-sizing:border-box;}html{font-family:\\\"system-ui, Verdana, Arial, sans-serif\\\";};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);console.log('isFetching',data.isFetching);const[mobileOS,setMobileOS]=Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false);const[sidebarOpen,setSidebarOpen]=Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(true);// const [loading, setLoading] = useState(data.isFetching);\nconst getMobileOS=()=>{const ua=navigator.userAgent;if(/android/i.test(ua)){return\"Android\";}else if(/iPad|iPhone|iPod/.test(ua)||navigator.platform==='MacIntel'&&navigator.maxTouchPoints>1){return\"iOS\";}return\"Other\";};Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(()=>{const os=getMobileOS();setMobileOS(os);},[]);// useEffect(() => {\n//   if (data.isFetching === false) {\n//     setLoading(false);\n//   }\n// }, [data]);  \nreturn Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"Fragment\"],{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(Container,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_3__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"title\",{children:\"Techno Cowgirl\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"meta\",{name:\"description\",content:\"No, my vet can't hook you up with ketamine.\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_3__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(Menu,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(MenuLeft,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{link:\"/\",children:\"Home\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{link:\"/about-us\",children:\"About Us\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{link:\"/category/horses\",children:\"Horses\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{link:\"/category/coding\",children:\"Coding\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"br\",{})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(MenuRight,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"a\",{href:\"instagram.com/techno_cowgirl\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(react_icons_fa__WEBPACK_IMPORTED_MODULE_7__[\"FaInstagram\"],{})})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(HeaderContent,{children:[mobileOS===\"Other\"&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"span\",{children:\"Techno Cowgirl\"}),(mobileOS===\"Android\"||mobileOS===\"iOS\")&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"span\",{children:\"Techno\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"div\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"span\",{children:\"Cowgirl\"})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(MainContainer,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_error__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isError})]})}),!!sidebarOpen&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(Sidebar,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"h2\",{children:\"Rachel & Jupiter\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"img\",{src:_assets_puppeteer_gif__WEBPACK_IMPORTED_MODULE_16__[\"default\"],height:\"290px\",width:\"290px\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(SidebarBio,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"p\",{children:\"Software engineer & lifelong horse nut celebrating the small gains I make with my 7 year old horse Jupiter and with the development of my app!\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsxs\"])(\"p\",{children:[\"Read more about me and Jupiter \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{link:\"/about-us\",children:\"here\"}),\".\"]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(react_goodreads_shelf__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{userId:\"37985894\",shelf:\"horse-books\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(SidebarToggle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__[\"jsx\"])(\"button\",{onClick:()=>setSidebarOpen(false),children:\"Close Sidebar\"})})]})]})]})});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Root));const Container=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y11\",label:\"Container\"})( false?undefined:{name:\"7ca65g\",styles:\"background-color:#282c34;font-family:'Roboto';color:#FFFFFF;min-height:100vh\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvYXJpem9uYS10aGVtZS9zcmMvY29tcG9uZW50cy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErSDRCIiwiZmlsZSI6Ii9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvYXJpem9uYS10aGVtZS9zcmMvY29tcG9uZW50cy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZVN0YXRlLCB1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjb25uZWN0LCBHbG9iYWwsIGNzcywgc3R5bGVkLCBIZWFkIH0gZnJvbSBcImZyb250aXR5XCJcbmltcG9ydCBMaW5rIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9saW5rXCJcbmltcG9ydCBTd2l0Y2ggZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL3N3aXRjaFwiXG5pbXBvcnQgR29vZHJlYWRzQm9va3NoZWxmIGZyb20gXCJyZWFjdC1nb29kcmVhZHMtc2hlbGZcIjtcbmltcG9ydCB7IEZhSW5zdGFncmFtIH0gZnJvbSAncmVhY3QtaWNvbnMvZmEnO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiXG5pbXBvcnQgRXJyb3IgZnJvbSBcIi4vZXJyb3JcIlxuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiXG5pbXBvcnQgUG9zdCBmcm9tIFwiLi9wb3N0XCJcbmltcG9ydCBQYWdlIGZyb20gXCIuL3BhZ2VcIlxuaW1wb3J0IHRjc2l0ZXN1bnNldCBmcm9tICcuLi9hc3NldHMvdGNzaXRlc3Vuc2V0LmpwZydcbmltcG9ydCB0Y3NpdGV3YWxraW5ncmFjaGVsIGZyb20gJy4uL2Fzc2V0cy90Y3NpdGV3YWxraW5ncmFjaGVsLmpwZydcbmltcG9ydCB0Y3NpdGVzaWRlIGZyb20gJy4uL2Fzc2V0cy90Y3NpdGVzaWRlLmpwZydcbmltcG9ydCBwdXBwZXRlZXIgZnJvbSAnLi4vYXNzZXRzL3B1cHBldGVlci5naWYnXG5cbmNvbnN0IFJvb3QgPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgY29uc29sZS5sb2coJ2lzRmV0Y2hpbmcnLCBkYXRhLmlzRmV0Y2hpbmcpXG4gIGNvbnN0IFttb2JpbGVPUywgc2V0TW9iaWxlT1NdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtzaWRlYmFyT3Blbiwgc2V0U2lkZWJhck9wZW5dID0gdXNlU3RhdGUodHJ1ZSk7XG4gIC8vIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGRhdGEuaXNGZXRjaGluZyk7XG4gIGNvbnN0IGdldE1vYmlsZU9TID0gKCkgPT4ge1xuICAgIGNvbnN0IHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudFxuICAgIGlmICgvYW5kcm9pZC9pLnRlc3QodWEpKSB7XG4gICAgICAgIHJldHVybiBcIkFuZHJvaWRcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoKC9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KHVhKSkgfHwgKG5hdmlnYXRvci5wbGF0Zm9ybSA9PT0gJ01hY0ludGVsJyAmJiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAxKSkge1xuICAgICAgICByZXR1cm4gXCJpT1NcIjtcbiAgICB9XG4gICAgcmV0dXJuIFwiT3RoZXJcIjtcbn1cblxudXNlRWZmZWN0KCgpID0+IHtcbiAgY29uc3Qgb3MgPSBnZXRNb2JpbGVPUygpO1xuICBzZXRNb2JpbGVPUyhvcyk7XG59LCBbXSk7ICBcblxuLy8gdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgaWYgKGRhdGEuaXNGZXRjaGluZyA9PT0gZmFsc2UpIHtcbi8vICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbi8vICAgfVxuLy8gfSwgW2RhdGFdKTsgIFxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250YWluZXI+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPlRlY2hubyBDb3dnaXJsPC90aXRsZT5cbiAgICAgICAgPG1ldGFcbiAgICAgICAgICBuYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgIGNvbnRlbnQ9XCJObywgbXkgdmV0IGNhbid0IGhvb2sgeW91IHVwIHdpdGgga2V0YW1pbmUuXCJcbiAgICAgICAgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxHbG9iYWxcbiAgICAgICAgc3R5bGVzPXtjc3NgXG4gICAgICAgICoge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIH1cbiAgICAgICAgaHRtbCB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwic3lzdGVtLXVpLCBWZXJkYW5hLCBBcmlhbCwgc2Fucy1zZXJpZlwiO1xuICAgICAgICB9XG4gICAgICBgfVxuICAgICAgLz5cbiAgICAgIDxIZWFkZXIgaXNQb3N0VHlwZT17ZGF0YS5pc1Bvc3RUeXBlfSBpc1BhZ2U9e2RhdGEuaXNQYWdlfT5cbiAgICAgIDxNZW51PlxuICAgICAgICA8TWVudUxlZnQ+XG4gICAgICAgICAgPExpbmsgbGluaz1cIi9cIj5Ib21lPC9MaW5rPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxMaW5rIGxpbms9XCIvYWJvdXQtdXNcIj5BYm91dCBVczwvTGluaz5cbiAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICA8TGluayBsaW5rPVwiL2NhdGVnb3J5L2hvcnNlc1wiPkhvcnNlczwvTGluaz5cbiAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICA8TGluayBsaW5rPVwiL2NhdGVnb3J5L2NvZGluZ1wiPkNvZGluZzwvTGluaz5cbiAgICAgICAgICA8YnIgLz5cbiAgICAgICAgPC9NZW51TGVmdD5cbiAgICAgICAgPE1lbnVSaWdodD5cbiAgICAgICAgICA8YSBocmVmPVwiaW5zdGFncmFtLmNvbS90ZWNobm9fY293Z2lybFwiPjxGYUluc3RhZ3JhbSAvPjwvYT5cbiAgICAgICAgPC9NZW51UmlnaHQ+XG4gICAgICA8L01lbnU+XG4gICAgICAgIDxIZWFkZXJDb250ZW50PlxuICAgICAgICAgIHsobW9iaWxlT1MgPT09IFwiT3RoZXJcIikgJiZcbiAgICAgICAgICA8c3Bhbj5UZWNobm8gQ293Z2lybDwvc3Bhbj5cbiAgICAgICAgICB9XG4gICAgICAgICAgeyhtb2JpbGVPUyA9PT0gXCJBbmRyb2lkXCIgfHwgbW9iaWxlT1MgPT09IFwiaU9TXCIpICYmXG4gICAgICAgICAgPD5cbiAgICAgICAgICA8c3Bhbj5UZWNobm88L3NwYW4+XG4gICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICA8c3Bhbj5Db3dnaXJsPC9zcGFuPlxuICAgICAgICAgIDwvPlxuICAgICAgICAgIH1cbiAgICAgICAgPC9IZWFkZXJDb250ZW50PlxuICAgICAgPC9IZWFkZXI+XG4gICAgICA8TWFpbkNvbnRhaW5lcj5cbiAgICAgICAgPE1haW4+XG4gICAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICAgIHsvKiA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+ICovfVxuICAgICAgICAgICAgPExpc3Qgd2hlbj17ZGF0YS5pc0FyY2hpdmV9IC8+XG4gICAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdH0gLz5cbiAgICAgICAgICAgIDxQYWdlIHdoZW49e2RhdGEuaXNQYWdlfSAvPlxuICAgICAgICAgICAgPEVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cbiAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgPC9NYWluPlxuICAgICAgICB7ISFzaWRlYmFyT3BlbiAmJlxuICAgICAgICA8U2lkZWJhcj5cbiAgICAgICAgICA8aDI+UmFjaGVsICYgSnVwaXRlcjwvaDI+XG4gICAgICAgICAgPGltZyBzcmM9e3B1cHBldGVlcn0gaGVpZ2h0PVwiMjkwcHhcIiB3aWR0aD1cIjI5MHB4XCIgLz5cbiAgICAgICAgICA8U2lkZWJhckJpbz5cbiAgICAgICAgICAgIDxwPlNvZnR3YXJlIGVuZ2luZWVyICYgbGlmZWxvbmcgaG9yc2UgbnV0IGNlbGVicmF0aW5nIHRoZSBzbWFsbCBnYWlucyBJIG1ha2Ugd2l0aCBteSA3IHllYXIgb2xkIGhvcnNlIEp1cGl0ZXIgYW5kIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIG15IGFwcCE8L3A+XG4gICAgICAgICAgICA8cD5SZWFkIG1vcmUgYWJvdXQgbWUgYW5kIEp1cGl0ZXIgPExpbmsgbGluaz1cIi9hYm91dC11c1wiPmhlcmU8L0xpbms+LjwvcD5cbiAgICAgICAgICA8L1NpZGViYXJCaW8+XG4gICAgICAgICAgPEdvb2RyZWFkc0Jvb2tzaGVsZiB1c2VySWQ9XCIzNzk4NTg5NFwiIHNoZWxmPVwiaG9yc2UtYm9va3NcIiAvPlxuICAgICAgICAgIDxTaWRlYmFyVG9nZ2xlPlxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRTaWRlYmFyT3BlbihmYWxzZSl9PkNsb3NlIFNpZGViYXI8L2J1dHRvbj5cbiAgICAgICAgICA8L1NpZGViYXJUb2dnbGU+XG4gICAgICAgIDwvU2lkZWJhcj5cbiAgICAgICAgfVxuICAgICAgPC9NYWluQ29udGFpbmVyPlxuICAgICAgPC9Db250YWluZXI+XG4gICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChSb290KVxuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuYmFja2dyb3VuZC1jb2xvcjogIzI4MmMzNDtcbmZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbmNvbG9yOiAjRkZGRkZGO1xubWluLWhlaWdodDogMTAwdmg7XG5gXG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXG5iYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZGVlO1xuYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzAwMDAsICMwMDAwMDApLCB1cmwoJHt0Y3NpdGV3YWxraW5ncmFjaGVsfSk7XG5iYWNrZ3JvdW5kLXBvc2l0aW9uOiAnY2VudGVyJzsgXG5iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBcbmJhY2tncm91bmQtcmVwZWF0OiAnbm8tcmVwZWF0JztcbmhlaWdodDogNzAwcHg7XG5oMSB7XG4gIGNvbG9yOiAjRkZDMzAwO1xufVxuYFxuXG5jb25zdCBIZWFkZXJDb250ZW50ID0gc3R5bGVkLmRpdmBcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgcGFkZGluZzogMmVtIDFlbTtcbiAgbWFyZ2luOiBhdXRvO1xuICBoMSB7XG4gICAgZm9udC1mYW1pbHk6ICdSeWUnLCBjdXJzaXZlO1xuICB9XG4gIHNwYW57XG4gICBmb250LWZhbWlseTogJ1J5ZScsIGN1cnNpdmU7XG4gICBsZXR0ZXItc3BhY2luZzogNXB4O1xuICAgZm9udC1zaXplOiA1MHB4O1xuICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXG5cdHRvIHJpZ2h0LFxuXHQjNDYyNTIzIDAsXG4gICAgICAgXHQjY2I5YjUxIDIyJSwgXG5cdCNmNmUyN2EgNDUlLFxuXHQjZjZmMmMwIDUwJSxcblx0I2Y2ZTI3YSA1NSUsXG5cdCNjYjliNTEgNzglLFxuXHQjNDYyNTIzIDEwMCVcblx0KTtcbiAgIGNvbG9yOnRyYW5zcGFyZW50O1xuICAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtcbn1cbmBcblxuY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5gXG5cbmNvbnN0IFNpZGViYXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNBRDkwNDQ7XG4gIHdpZHRoOiAzNTBweDtcbiAgJiA+IGgyIHtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJyxtb25vc3BhY2U7XG4gIH1cbiAgJiA+IGltZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG5gXG5cbmNvbnN0IE1haW4gPSBzdHlsZWQubWFpbmBcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgLyogd2lkdGg6IDgwJTsgKi9cbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW46IGF1dG87XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbiAgaDIge1xuICAgIG1hcmdpbjogMC41ZW0gMDtcbiAgfVxuICBwIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU1ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xuICB9XG4gIGZpZ2NhcHRpb24ge1xuICAgIGNvbG9yOiAjODI4MjgyO1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG4gIGEge1xuICAgIGNvbG9yOiAjQUQ5MDQ0O1xuICAgIGZvbnQtZmFtaWx5OiAnSW5jb25zb2xhdGEnLCBtb25vc3BhY2U7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgfVxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgfVxuYFxuXG5jb25zdCBNZW51ID0gc3R5bGVkLm5hdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYmFja2dyb3VuZC1jb2xvcjogI0FEOTA0NDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAyMHB4O1xuYFxuXG5jb25zdCBNZW51TGVmdCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICYgPiBhIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6ICdJbmNvbnNvbGF0YScsIG1vbm9zcGFjZTtcbiAgfVxuYFxuXG5jb25zdCBNZW51UmlnaHQgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAvKiB3aWR0aDogODAwcHg7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luOiBhdXRvOyAqL1xuICAvKiBwYWRkaW5nOiAxZW07XG4gIG1hcmdpbjogYXV0bzsgKi9cbiAgJiA+IGEge1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJywgbW9ub3NwYWNlO1xuICB9XG5gXG5cbmNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gIGJhY2tncm91bmQ6ICMzNjU0QTg7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNGRkZGRkY7XG5cbiAgOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6ICM4ODg7XG4gIH1cbmBcblxuY29uc3QgU2lkZWJhckJpbyA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiA5MCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgJiA+IHAge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgYSB7XG4gICAgY29sb3I6ICNBRDkwNDQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gIH1cbmBcblxuY29uc3QgU2lkZWJhclRvZ2dsZSA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gICYgPiBidXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBRDkwNDQ7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbmAiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"header\", false?undefined:{target:\"e1flbr7y10\",label:\"Header\"})(\"background-color:#e5edee;background:linear-gradient(to top, #0000, #000000),url(\",_assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\");background-position:'center';background-size:cover;background-repeat:'no-repeat';height:700px;h1{color:#FFC300;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y9\",label:\"HeaderContent\"})( false?undefined:{name:\"9dfzbe\",styles:\"max-width:800px;padding:2em 1em;margin:auto;h1{font-family:'Rye',cursive;}span{font-family:'Rye',cursive;letter-spacing:5px;font-size:50px;font-weight:bold;background-image:linear-gradient(\\n\\tto right,\\n\\t#462523 0,\\n       \\t#cb9b51 22%, \\n\\t#f6e27a 45%,\\n\\t#f6f2c0 50%,\\n\\t#f6e27a 55%,\\n\\t#cb9b51 78%,\\n\\t#462523 100%\\n\\t);color:transparent;-webkit-background-clip:text;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MainContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y8\",label:\"MainContainer\"})( false?undefined:{name:\"ho1qnd\",styles:\"display:flex;flex-direction:row\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Sidebar=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y7\",label:\"Sidebar\"})( false?undefined:{name:\"dm8zu5\",styles:\"display:flex;flex-direction:column;align-items:center;margin-top:20px;border-left:2px solid #AD9044;width:350px;&>h2{color:#AD9044;font-family:'Inconsolata',monospace;}&>img{margin-bottom:10px;margin-top:10px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"main\", false?undefined:{target:\"e1flbr7y6\",label:\"Main\"})( false?undefined:{name:\"7kggfj\",styles:\"max-width:800px;padding:1em;margin:auto;img{max-width:100%;}h2{margin:0.5em 0;}p{margin-top:10px;line-height:1.55em;margin-bottom:0.75em;}figcaption{color:#828282;font-size:0.8em;margin-bottom:1em;}a{color:#AD9044;font-family:'Inconsolata',monospace;text-decoration:underline;letter-spacing:2px;}a:hover{color:#FFFFFF;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"nav\", false?undefined:{target:\"e1flbr7y5\",label:\"Menu\"})( false?undefined:{name:\"2othve\",styles:\"display:flex;flex-direction:row;background-color:#AD9044;justify-content:space-between;padding:20px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuLeft=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y4\",label:\"MenuLeft\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuRight=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y3\",label:\"MenuRight\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Button=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"button\", false?undefined:{target:\"e1flbr7y2\",label:\"Button\"})( false?undefined:{name:\"14mrmrf\",styles:\"background:#3654A8;border:none;color:#FFFFFF;:hover{cursor:pointer;color:#888;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const SidebarBio=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y1\",label:\"SidebarBio\"})( false?undefined:{name:\"237sg8\",styles:\"width:90%;text-align:center;&>p{margin-top:10px;}a{color:#AD9044;letter-spacing:2px;text-decoration:none;}a:hover{color:#FFFFFF;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const SidebarToggle=Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"styled\"])(\"div\", false?undefined:{target:\"e1flbr7y0\",label:\"SidebarToggle\"})( false?undefined:{name:\"chewo3\",styles:\"margin-top:20px;&>button{background-color:#AD9044;color:#FFFFFF;font-size:20px;padding:10px;font-weight:500;border:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/arizona-theme/src/components/index.js\n");

/***/ })

})