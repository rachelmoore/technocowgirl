webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/list.js":
/*!*******************************************************!*\
  !*** ./packages/techno-chakra/src/components/list.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loading */ \"./packages/techno-chakra/src/components/loading.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const List=({state,actions,libraries})=>{const data=state.source.get(state.router.link);const Html2React=libraries.html2react.Component;const[fullScreen,setFullScreen]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(true);const[isLargerThan800]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 800px)\");const[isLargerThan1015]=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"useMediaQuery\"])(\"(min-width: 1015px)\");const colorDict={0:\"#3AAEC2\",1:\"#EE0300\",2:\"#6A3A80\"};const borderDict={0:\"0px 0px 5px 5px\",1:\"5px 5px 5px 0px\",2:\"5px 0px 0px 5px\"};Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(()=>{if(isLargerThan800){setFullScreen(true);}else{setFullScreen(false);}},[isLargerThan800]);if(data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{});}if(!data.isFetching){return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"100%\",children:[data.items.map((item,idx)=>{const post=state.source[item.type][item.id];return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContainer,{children:[fullScreen&&idx%2!==0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row\",width:\"100%\",sx:{'--custom-bg-odd':colorDict[idx],'--custom-border':borderDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-odd)\",style:{borderWidth:'var(--custom-border)',borderStyle:'solid',borderColor:'#000000'},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),fullScreen&&idx%2===0&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"row-reverse\",width:\"100%\",sx:{'--custom-bg-even':colorDict[idx],'--custom-border':borderDict[idx]},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",padding:10,bg:\"var(--custom-bg-even)\",style:{borderWidth:'var(--custom-border)',borderStyle:'solid',borderColor:'#000000'},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Flex\"],{direction:\"column\",width:\"50%\",style:{background:`url(\"${state.source.attachment[post.featured_media].source_url}\")`,backgroundPosition:\"center\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}})]}),!fullScreen&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,style:{textDecoration:\"none\"},children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(PostTitle,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Heading\"],{size:\"lg\",pb:5,pt:5,children:post.title.rendered})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"br\",{})]},item.id),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(ItemContentContainer,{children:[state.source.attachment[post.featured_media]&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"Image\"],{src:state.source.attachment[post.featured_media].source_url}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.excerpt.rendered}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{link:post.link,children:\"Read More\"},item.id)]})]})]});}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(PrevNextNav,{children:[data.previous&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.previous);},children:\"\\xAB Prev\"}),data.next&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"button\",{onClick:()=>{actions.router.set(data.next);},children:\"Next \\xBB\"})]})]});}};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(List));const ItemContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs3\",label:\"ItemContainer\"})( false?undefined:{name:\"mi7yei\",styles:\"background-color:#FFFFFF;color:#000000;width:100%;margin-bottom:0px;&>a{display:block;font-size:1.2em;color:#AD9044;text-decoration:none;}p{font-size:22px;color:#FFFFFF;}h2{margin-top:0px;font-size:36px;}@media (min-width: 801px){width:100%;margin-bottom:0px;}@media (max-width: 800px){width:780px;border-radius:100px 100px 50px 50px;margin-bottom:60px;p{font-size:22px;color:#000000;}}@media (max-width: 600px){width:350px;border-radius:100px 100px 50px 50px;margin-bottom:60px;p{font-size:22px;color:#000000;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWNoZWxtb29yZS9EZXNrdG9wL1dlYnNpdGVzL3RlY2hub2Nvd2dpcmwvcGFja2FnZXMvdGVjaG5vLWNoYWtyYS9zcmMvY29tcG9uZW50cy9saXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdJZ0MiLCJmaWxlIjoiL1VzZXJzL3JhY2hlbG1vb3JlL0Rlc2t0b3AvV2Vic2l0ZXMvdGVjaG5vY293Z2lybC9wYWNrYWdlcy90ZWNobm8tY2hha3JhL3NyYy9jb21wb25lbnRzL2xpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkaW5nLCBUZXh0LCBGbGV4LCBJbWFnZSwgdXNlTWVkaWFRdWVyeSB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIlxuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIlxuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuXG5jb25zdCBMaXN0ID0gKHsgc3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcyB9KSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgY29uc3QgW2Z1bGxTY3JlZW4sIHNldEZ1bGxTY3JlZW5dID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtpc0xhcmdlclRoYW44MDBdID0gdXNlTWVkaWFRdWVyeShcIihtaW4td2lkdGg6IDgwMHB4KVwiKTtcbiAgY29uc3QgW2lzTGFyZ2VyVGhhbjEwMTVdID0gdXNlTWVkaWFRdWVyeShcIihtaW4td2lkdGg6IDEwMTVweClcIik7XG4gIGNvbnN0IGNvbG9yRGljdCA9IHtcbiAgICAwOiBcIiMzQUFFQzJcIixcbiAgICAxOiBcIiNFRTAzMDBcIixcbiAgICAyOiBcIiM2QTNBODBcIixcbiAgfVxuICBjb25zdCBib3JkZXJEaWN0ID0ge1xuICAgIDA6IFwiMHB4IDBweCA1cHggNXB4XCIsXG4gICAgMTogXCI1cHggNXB4IDVweCAwcHhcIixcbiAgICAyOiBcIjVweCAwcHggMHB4IDVweFwiXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0xhcmdlclRoYW44MDApIHtcbiAgICAgIHNldEZ1bGxTY3JlZW4odHJ1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgc2V0RnVsbFNjcmVlbihmYWxzZSk7XG4gICAgfVxuICB9LCBbaXNMYXJnZXJUaGFuODAwXSlcblxuICBpZiAoZGF0YS5pc0ZldGNoaW5nKSB7XG4gICAgcmV0dXJuIDxMb2FkaW5nIC8+XG4gIH1cblxuICBpZiAoIWRhdGEuaXNGZXRjaGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8RmxleCBkaXJlY3Rpb249XCJjb2x1bW5cIiB3aWR0aD1cIjEwMCVcIj5cbiAgICAgICAge2RhdGEuaXRlbXMubWFwKChpdGVtLCBpZHgpID0+IHtcbiAgICAgICAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2l0ZW0udHlwZV1baXRlbS5pZF1cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxJdGVtQ29udGFpbmVyPlxuICAgICAgICAgICAge2Z1bGxTY3JlZW4gJiYgKGlkeCAlIDIgIT09IDApICYmXG4gICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cInJvd1wiIHdpZHRoPVwiMTAwJVwiIHN4PXt7ICctLWN1c3RvbS1iZy1vZGQnOiBjb2xvckRpY3RbaWR4XSwgJy0tY3VzdG9tLWJvcmRlcic6IGJvcmRlckRpY3RbaWR4XX19PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgcGFkZGluZz17MTB9IGJnPSd2YXIoLS1jdXN0b20tYmctb2RkKScgc3R5bGU9e3tib3JkZXJXaWR0aDogJ3ZhcigtLWN1c3RvbS1ib3JkZXIpJywgYm9yZGVyU3R5bGU6ICdzb2xpZCcsIGJvcmRlckNvbG9yOiAnIzAwMDAwMCd9fT5cbiAgICAgICAgICAgICAgICAgIDxMaW5rIGtleT17aXRlbS5pZH0gbGluaz17cG9zdC5saW5rfSBzdHlsZT17e3RleHREZWNvcmF0aW9uOiBcIm5vbmVcIn19PlxuICAgICAgICAgICAgICAgICAgICA8UG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJsZ1wiIHBiPXs1fSBwdD17NX0+e3Bvc3QudGl0bGUucmVuZGVyZWR9PC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgICAgICA8L1Bvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmV4Y2VycHQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgc3R5bGU9e3sgYmFja2dyb3VuZDogYHVybChcIiR7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH1cIilgLCBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyXCIsIGJhY2tncm91bmRTaXplOiBcImNvdmVyXCIsIGJhY2tncm91bmRSZXBlYXQ6IFwibm8tcmVwZWF0XCIgfX0+XG4gICAgICAgICAgICAgICAgICB7Lyoge3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdICYmXG4gICAgICAgICAgICAgICAgICAgIDxJbWFnZSBzcmM9e3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdLnNvdXJjZV91cmx9IC8+XG4gICAgICAgICAgICAgICAgICAgIH0gKi99XG4gICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7ZnVsbFNjcmVlbiAmJiAoaWR4ICUgMiA9PT0gMCkgJiZcbiAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwicm93LXJldmVyc2VcIiB3aWR0aD1cIjEwMCVcIiBzeD17eyAnLS1jdXN0b20tYmctZXZlbic6IGNvbG9yRGljdFtpZHhdLCAnLS1jdXN0b20tYm9yZGVyJzogYm9yZGVyRGljdFtpZHhdfX0+XG4gICAgICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9XCI1MCVcIiBwYWRkaW5nPXsxMH0gYmc9J3ZhcigtLWN1c3RvbS1iZy1ldmVuKScgc3R5bGU9e3tib3JkZXJXaWR0aDogJ3ZhcigtLWN1c3RvbS1ib3JkZXIpJywgYm9yZGVyU3R5bGU6ICdzb2xpZCcsIGJvcmRlckNvbG9yOiAnIzAwMDAwMCd9fT5cbiAgICAgICAgICAgICAgICAgIDxMaW5rIGtleT17aXRlbS5pZH0gbGluaz17cG9zdC5saW5rfSBzdHlsZT17e3RleHREZWNvcmF0aW9uOiBcIm5vbmVcIn19PlxuICAgICAgICAgICAgICAgICAgICA8UG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJsZ1wiIHBiPXs1fSBwdD17NX0+e3Bvc3QudGl0bGUucmVuZGVyZWR9PC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgICAgICA8L1Bvc3RUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmV4Y2VycHQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgIDxGbGV4IGRpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPVwiNTAlXCIgc3R5bGU9e3sgYmFja2dyb3VuZDogYHVybChcIiR7c3RhdGUuc291cmNlLmF0dGFjaG1lbnRbcG9zdC5mZWF0dXJlZF9tZWRpYV0uc291cmNlX3VybH1cIilgLCBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyXCIsIGJhY2tncm91bmRTaXplOiBcImNvdmVyXCIsIGJhY2tncm91bmRSZXBlYXQ6IFwibm8tcmVwZWF0XCIgfX0+XG4gICAgICAgICAgICAgICAgICB7Lyoge3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdICYmXG4gICAgICAgICAgICAgICAgICAgIDxJbWFnZSBzcmM9e3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdLnNvdXJjZV91cmx9IC8+XG4gICAgICAgICAgICAgICAgICAgIH0gKi99XG4gICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgeyFmdWxsU2NyZWVuICYmXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICA8TGluayBrZXk9e2l0ZW0uaWR9IGxpbms9e3Bvc3QubGlua30gc3R5bGU9e3t0ZXh0RGVjb3JhdGlvbjogXCJub25lXCJ9fT5cbiAgICAgICAgICAgICAgICA8UG9zdFRpdGxlPlxuICAgICAgICAgICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cImxnXCIgcGI9ezV9IHB0PXs1fT57cG9zdC50aXRsZS5yZW5kZXJlZH08L0hlYWRpbmc+XG4gICAgICAgICAgICAgICAgPC9Qb3N0VGl0bGU+XG4gICAgICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPEl0ZW1Db250ZW50Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIHtzdGF0ZS5zb3VyY2UuYXR0YWNobWVudFtwb3N0LmZlYXR1cmVkX21lZGlhXSAmJlxuICAgICAgICAgICAgICAgIDxJbWFnZSBzcmM9e3N0YXRlLnNvdXJjZS5hdHRhY2htZW50W3Bvc3QuZmVhdHVyZWRfbWVkaWFdLnNvdXJjZV91cmx9IC8+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3Bvc3QuZXhjZXJwdC5yZW5kZXJlZH0gLz5cbiAgICAgICAgICAgICAgICA8TGluayBrZXk9e2l0ZW0uaWR9IGxpbms9e3Bvc3QubGlua30+XG4gICAgICAgICAgICAgICAgICBSZWFkIE1vcmVcbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDwvSXRlbUNvbnRlbnRDb250YWluZXI+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvSXRlbUNvbnRhaW5lcj5cbiAgICAgICAgICApfVxuICAgICAgICApfVxuICAgICAgICA8UHJldk5leHROYXY+XG4gICAgICAgICAge2RhdGEucHJldmlvdXMgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEucHJldmlvdXMpXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICYjMTcxOyBQcmV2XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtkYXRhLm5leHQgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucy5yb3V0ZXIuc2V0KGRhdGEubmV4dClcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgTmV4dCAmIzE4NztcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUHJldk5leHROYXY+XG4gICAgICA8L0ZsZXg+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdClcblxuY29uc3QgSXRlbUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAmID4gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBjb2xvcjogI0FEOTA0NDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgcCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICB9XG4gIGgyIHtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA4MDFweCkge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICB3aWR0aDogNzgwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwcHggMTAwcHggNTBweCA1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XG4gICAgcCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGNvbG9yOiAjMDAwMDAwO1xuICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4IDEwMHB4IDUwcHggNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAgIHAge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgfVxuICB9XG5gXG5cbmNvbnN0IEl0ZW1Db250ZW50Q29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNTBweCA1MHB4O1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7ICBcbiAgICBtYXgtd2lkdGg6IDc4MHB4O1xuICB9XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG4gICYgPiBhIHtcbiAgICBjb2xvcjogYmx1ZTtcbiAgICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJywgbW9ub3NwYWNlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIH1cbmBcblxuY29uc3QgUHJldk5leHROYXYgPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nLXRvcDogMS41ZW07XG5cbiAgJiA+IGJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZDogIzM2NTRBODtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJveC1zaGFkb3c6IDAuNXJlbSAwLjVyZW0gYmxhY2ssIC0wLjVyZW0gLTAuNXJlbSAjQUQ5MDQ0O1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XG4gIH1cbiAgJiA+IGJ1dHRvbjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5gXG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5kaXZgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuICAgIC1tb3otYW5pbWF0aW9uOiBjb2xvcmNoYW5nZSAyMHMgaW5maW5pdGUgYWx0ZXJuYXRlO1xuICAgIGFuaW1hdGlvbjogY29sb3JjaGFuZ2UgMjBzIGluZmluaXRlIGFsdGVybmF0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHggMTAwcHggMHB4IDBweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG4gICAgfVxuXG4gICAgQGtleWZyYW1lcyBjb2xvcmNoYW5nZSB7XG4gICAgMCUge1xuICAgICAgY29sb3I6ICMzQUFFQzI7XG4gICAgfVxuICAgIFxuICAgIDEwJSB7XG4gICAgICBjb2xvcjogI0ZEMDVFOTtcbiAgICB9XG4gICAgXG4gICAgMjUlIHtcbiAgICAgIGNvbG9yOiB5ZWxsb3c7XG4gICAgfVxuICAgIFxuICAgIDUwJSB7XG4gICAgICBjb2xvcjogI0VFMDMwMDtcbiAgICB9XG4gICAgXG4gICAgXG4gICAgNzUlIHtcbiAgICAgIGNvbG9yOiB5ZWxsb3c7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBjb2xvcjogI0ZEMDVFOTtcbiAgICB9XG59XG5gIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const ItemContentContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs2\",label:\"ItemContentContainer\"})( false?undefined:{name:\"10fa48f\",styles:\"background-color:#FFFFFF;color:#000000;border-radius:0px 0px 50px 50px;padding-left:20px;padding-right:20px;padding-bottom:20px;width:100%;@media (max-width: 800px){max-width:780px;}margin-bottom:60px;&>a{color:blue;font-family:'Inconsolata',monospace;text-decoration:underline;letter-spacing:2px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PrevNextNav=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs1\",label:\"PrevNextNav\"})( false?undefined:{name:\"b2xp23\",styles:\"padding-top:1.5em;&>button{background:#3654A8;border:none;color:#FFFFFF;text-decoration:none;font-size:20px;margin-right:2em;padding:10px;box-shadow:0.5rem 0.5rem black,-0.5rem -0.5rem #AD9044;transition:all 0.3s ease 0s;}&>button:hover{cursor:pointer;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"eeivcqs0\",label:\"PostTitle\"})( false?undefined:{name:\"f5ggu5\",styles:\"text-align:center;-webkit-animation:colorchange 20s infinite alternate;-moz-animation:colorchange 20s infinite alternate;animation:colorchange 20s infinite alternate;@media (max-width: 800px){border-radius:100px 100px 0px 0px;background-color:#000000;}@keyframes colorchange{0%{color:#3AAEC2;}10%{color:#FD05E9;}25%{color:yellow;}50%{color:#EE0300;}75%{color:yellow;}100%{color:#FD05E9;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/list.js\n");

/***/ })

})