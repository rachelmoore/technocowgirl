webpackHotUpdate("technocowgirl",{

/***/ "./packages/techno-chakra/src/components/index.js":
/*!********************************************************!*\
  !*** ./packages/techno-chakra/src/components/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var react_goodreads_shelf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-goodreads-shelf */ \"./node_modules/react-goodreads-shelf/dist/index.es.js\");\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-icons/fa */ \"./node_modules/react-icons/fa/index.esm.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./loading */ \"./packages/techno-chakra/src/components/loading.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error */ \"./packages/techno-chakra/src/components/error.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./list */ \"./packages/techno-chakra/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./post */ \"./packages/techno-chakra/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./page */ \"./packages/techno-chakra/src/components/page.js\");\n/* harmony import */ var _aboutdrawer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./aboutdrawer */ \"./packages/techno-chakra/src/components/aboutdrawer.js\");\n/* harmony import */ var _bookshelf__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./bookshelf */ \"./packages/techno-chakra/src/components/bookshelf.js\");\n/* harmony import */ var _topnavigation__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./topnavigation */ \"./packages/techno-chakra/src/components/topnavigation.js\");\n/* harmony import */ var _assets_tcsitesunset_jpg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../assets/tcsitesunset.jpg */ \"./packages/techno-chakra/src/assets/tcsitesunset.jpg\");\n/* harmony import */ var _assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../assets/tcsitewalkingrachel.jpg */ \"./packages/techno-chakra/src/assets/tcsitewalkingrachel.jpg\");\n/* harmony import */ var _assets_tcsiteside_jpg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../assets/tcsiteside.jpg */ \"./packages/techno-chakra/src/assets/tcsiteside.jpg\");\n/* harmony import */ var _assets_puppeteer_gif__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../assets/puppeteer.gif */ \"./packages/techno-chakra/src/assets/puppeteer.gif\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"27ol2x-Root\",styles:\"*{margin:0;padding:0;box-sizing:border-box;}html{font-family:\\\"system-ui, Verdana, Arial, sans-serif\\\";}li{line-height:1.85em;}iframe{width:100%!important;}.imgur-video{@media (max-width: 600px){.imgur-video{}width:90vw;}}figure{margin-top:40px;margin-bottom:40px;@media (max-width: 600px){figure{}max-width:90vw;}}li{margin-bottom:10px;line-height:1.55em;font-size:17px;};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);console.log('isFetching',data.isFetching);const[mobileOS,setMobileOS]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false);const[sidebarOpen,setSidebarOpen]=Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(true);const{isOpen,onOpen,onClose}=Object(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__[\"useDisclosure\"])();// const [loading, setLoading] = useState(data.isFetching);\nconst getMobileOS=()=>{const ua=navigator.userAgent;if(/android/i.test(ua)){return\"Android\";}else if(/iPad|iPhone|iPod/.test(ua)||navigator.platform==='MacIntel'&&navigator.maxTouchPoints>1){return\"iOS\";}return\"Other\";};Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(()=>{const os=getMobileOS();setMobileOS(os);},[]);// useEffect(() => {\n//   if (data.isFetching === false) {\n//     setLoading(false);\n//   }\n// }, [data]);  \nreturn Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__[\"ChakraProvider\"],{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(Container,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_4__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"title\",{children:\"Techno Cowgirl\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"meta\",{name:\"description\",content:\"No, my vet can't hook you up with ketamine.\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_4__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(Menu,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(MenuLeft,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_topnavigation__WEBPACK_IMPORTED_MODULE_17__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_aboutdrawer__WEBPACK_IMPORTED_MODULE_15__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_bookshelf__WEBPACK_IMPORTED_MODULE_16__[\"default\"],{})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(HeaderContent,{children:[mobileOS===\"Other\"&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"span\",{children:\"Techno Cowgirl\"}),(mobileOS===\"Android\"||mobileOS===\"iOS\")&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"span\",{children:\"Techno\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"div\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(\"span\",{children:\"Cowgirl\"})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(MainContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_13__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_14__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_22__[\"jsx\"])(_error__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isError})]})})})]})});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(Root));const Container=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh7\",label:\"Container\"})( false?undefined:{name:\"7ca65g\",styles:\"background-color:#282c34;font-family:'Roboto';color:#FFFFFF;min-height:100vh\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"header\", false?undefined:{target:\"e81edqh6\",label:\"Header\"})(\"background-color:#e5edee;background:linear-gradient(to top, #0000, #000000),url(\",_assets_tcsitewalkingrachel_jpg__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\");background-position:'center';background-size:cover;background-repeat:'no-repeat';height:700px;h1{color:#FFC300;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh5\",label:\"HeaderContent\"})( false?undefined:{name:\"9dfzbe\",styles:\"max-width:800px;padding:2em 1em;margin:auto;h1{font-family:'Rye',cursive;}span{font-family:'Rye',cursive;letter-spacing:5px;font-size:50px;font-weight:bold;background-image:linear-gradient(\\n\\tto right,\\n\\t#462523 0,\\n       \\t#cb9b51 22%, \\n\\t#f6e27a 45%,\\n\\t#f6f2c0 50%,\\n\\t#f6e27a 55%,\\n\\t#cb9b51 78%,\\n\\t#462523 100%\\n\\t);color:transparent;-webkit-background-clip:text;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MainContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh4\",label:\"MainContainer\"})( false?undefined:{name:\"ho1qnd\",styles:\"display:flex;flex-direction:row\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"main\", false?undefined:{target:\"e81edqh3\",label:\"Main\"})( false?undefined:{name:\"1yvvv2j\",styles:\"max-width:800px;padding:1em;margin-left:auto;margin-right:auto;margin-bottom:auto;img{max-width:100%;}h2{margin:0.5em 0;font-size:32px;}p{margin-top:10px;line-height:1.55em;margin-bottom:0.75em;font-size:17px;}figcaption{color:#828282;font-size:0.8em;margin-bottom:1em;}a{color:#AD9044;font-family:'Inconsolata',monospace;text-decoration:underline;letter-spacing:2px;}a:hover{color:#FFFFFF;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"nav\", false?undefined:{target:\"e81edqh2\",label:\"Menu\"})( false?undefined:{name:\"2othve\",styles:\"display:flex;flex-direction:row;background-color:#AD9044;justify-content:space-between;padding:20px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuLeft=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh1\",label:\"MenuLeft\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const MenuRight=Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"styled\"])(\"div\", false?undefined:{target:\"e81edqh0\",label:\"MenuRight\"})( false?undefined:{name:\"l5bj1j\",styles:\"display:flex;flex-direction:row;&>a{margin-right:1em;color:#FFFFFF;text-decoration:none;font-family:'Inconsolata',monospace;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/techno-chakra/src/components/index.js\n");

/***/ })

})